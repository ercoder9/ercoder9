{
 cells: [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "0333f4d4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Data Science Project\n",
    "# Archita K\n",
    "# Project Title - Predicting Covid-19 Cases using Facebook Prophet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "72b4d780",
   "metadata": {
    "id": "72b4d780"
   },
   "outputs": [],
   "source": [
    "import fbprophet\n",
    "from fbprophet import Prophet\n",
    "import pandas as pd\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "a55ae1fd",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "a55ae1fd",
    "outputId": "ecbd31e2-3f26-40ec-b949-95484345faa0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['__class__',\n",
       " '__delattr__',\n",
       " '__dict__',\n",
       " '__dir__',\n",
       " '__doc__',\n",
       " '__eq__',\n",
       " '__format__',\n",
       " '__ge__',\n",
       " '__getattribute__',\n",
       " '__gt__',\n",
       " '__hash__',\n",
       " '__init__',\n",
       " '__init_subclass__',\n",
       " '__le__',\n",
       " '__lt__',\n",
       " '__module__',\n",
       " '__ne__',\n",
       " '__new__',\n",
       " '__reduce__',\n",
       " '__reduce_ex__',\n",
       " '__repr__',\n",
       " '__setattr__',\n",
       " '__sizeof__',\n",
       " '__str__',\n",
       " '__subclasshook__',\n",
       " '__weakref__',\n",
       " '_load_stan_backend',\n",
       " 'add_country_holidays',\n",
       " 'add_group_component',\n",
       " 'add_regressor',\n",
       " 'add_seasonality',\n",
       " 'construct_holiday_dataframe',\n",
       " 'fit',\n",
       " 'flat_growth_init',\n",
       " 'flat_trend',\n",
       " 'fourier_series',\n",
       " 'initialize_scales',\n",
       " 'linear_growth_init',\n",
       " 'logistic_growth_init',\n",
       " 'make_all_seasonality_features',\n",
       " 'make_future_dataframe',\n",
       " 'make_holiday_features',\n",
       " 'make_seasonality_features',\n",
       " 'parse_seasonality_args',\n",
       " 'percentile',\n",
       " 'piecewise_linear',\n",
       " 'piecewise_logistic',\n",
       " 'plot',\n",
       " 'plot_components',\n",
       " 'predict',\n",
       " 'predict_seasonal_components',\n",
       " 'predict_trend',\n",
       " 'predict_uncertainty',\n",
       " 'predictive_samples',\n",
       " 'regressor_column_matrix',\n",
       " 'sample_model',\n",
       " 'sample_posterior_predictive',\n",
       " 'sample_predictive_trend',\n",
       " 'set_auto_seasonalities',\n",
       " 'set_changepoints',\n",
       " 'setup_dataframe',\n",
       " 'validate_column_name',\n",
       " 'validate_inputs']"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dir(Prophet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "erkR8GMUdZba",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 74,
     "resources": {
      "http://localhost:8080/nbextensions/google.colab/files.js": {
       "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgZG8gewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwoKICAgICAgbGV0IHBlcmNlbnREb25lID0gZmlsZURhdGEuYnl0ZUxlbmd0aCA9PT0gMCA/CiAgICAgICAgICAxMDAgOgogICAgICAgICAgTWF0aC5yb3VuZCgocG9zaXRpb24gLyBmaWxlRGF0YS5ieXRlTGVuZ3RoKSAqIDEwMCk7CiAgICAgIHBlcmNlbnQudGV4dENvbnRlbnQgPSBgJHtwZXJjZW50RG9uZX0lIGRvbmVgOwoKICAgIH0gd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCk7CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
       "headers": [
        [
         "content-type",
         "application/javascript"
        ]
       ],
       "ok": true,
       "status": 200,
       "status_text": ""
      }
     }
    },
    "id": "erkR8GMUdZba",
    "outputId": "73ded3cc-70fb-463f-bbbe-defed3a921b6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "     <input type=\"file\" id=\"files-3c2f2ad4-324d-4579-a279-a3940fc5d732\" name=\"files[]\" multiple disabled\n",
       "        style=\"border:none\" />\n",
       "     <output id=\"result-3c2f2ad4-324d-4579-a279-a3940fc5d732\">\n",
       "      Upload widget is only available when the cell has been executed in the\n",
       "      current browser session. Please rerun this cell to enable.\n",
       "      </output>\n",
       "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Saving covid_19_clean_complete.csv to covid_19_clean_complete.csv\n"
     ]
    }
   ],
   "source": [
    "from google.colab import files  \n",
    "uploaded = files.upload()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "b9378950",
   "metadata": {
    "id": "b9378950"
   },
   "outputs": [],
   "source": [
    "df=pd.read_csv('covid_19_clean_complete.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63918f1f",
   "metadata": {
    "id": "63918f1f",
    "outputId": "a9c0f4f5-319f-4c7d-9f42-93137578ddb7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Province/State</th>\n",
       "      <th>Country/Region</th>\n",
       "      <th>Lat</th>\n",
       "      <th>Long</th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "      <th>WHO Region</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>33.93911</td>\n",
       "      <td>67.709953</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Eastern Mediterranean</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Albania</td>\n",
       "      <td>41.15330</td>\n",
       "      <td>20.168300</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Algeria</td>\n",
       "      <td>28.03390</td>\n",
       "      <td>1.659600</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Andorra</td>\n",
       "      <td>42.50630</td>\n",
       "      <td>1.521800</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Europe</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>NaN</td>\n",
       "      <td>Angola</td>\n",
       "      <td>-11.20270</td>\n",
       "      <td>17.873900</td>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>Africa</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Province/State Country/Region       Lat       Long        Date  Confirmed  \\\n",
       "0            NaN    Afghanistan  33.93911  67.709953  2020-01-22          0   \n",
       "1            NaN        Albania  41.15330  20.168300  2020-01-22          0   \n",
       "2            NaN        Algeria  28.03390   1.659600  2020-01-22          0   \n",
       "3            NaN        Andorra  42.50630   1.521800  2020-01-22          0   \n",
       "4            NaN         Angola -11.20270  17.873900  2020-01-22          0   \n",
       "\n",
       "   Deaths  Recovered  Active             WHO Region  \n",
       "0       0          0       0  Eastern Mediterranean  \n",
       "1       0          0       0                 Europe  \n",
       "2       0          0       0                 Africa  \n",
       "3       0          0       0                 Europe  \n",
       "4       0          0       0                 Africa  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f07d09ac",
   "metadata": {
    "id": "f07d09ac"
   },
   "source": [
    "# Data Preprocessing on Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "82c9ea2f",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "82c9ea2f",
    "outputId": "915956f8-c771-4aa2-bd58-76122be8e512"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(49068, 10)"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "f5b0a627",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "f5b0a627",
    "outputId": "a269c401-2c1c-4d5f-c22a-bec6eabf58c0"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Province/State     object\n",
       "Country/Region     object\n",
       "Lat               float64\n",
       "Long              float64\n",
       "Date               object\n",
       "Confirmed           int64\n",
       "Deaths              int64\n",
       "Recovered           int64\n",
       "Active              int64\n",
       "WHO Region         object\n",
       "dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f2871f83",
   "metadata": {
    "id": "f2871f83"
   },
   "outputs": [],
   "source": [
    "df['Date']=pd.to_datetime(df['Date'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "fde411b8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "fde411b8",
    "outputId": "d56a5054-0048-4f26-8d2b-a5fb282d6d13"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Province/State            object\n",
       "Country/Region            object\n",
       "Lat                      float64\n",
       "Long                     float64\n",
       "Date              datetime64[ns]\n",
       "Confirmed                  int64\n",
       "Deaths                     int64\n",
       "Recovered                  int64\n",
       "Active                     int64\n",
       "WHO Region                object\n",
       "dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "596559e9",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "596559e9",
    "outputId": "809cf840-5053-40b8-bf36-f1d711ff030b"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Province/State    34404\n",
       "Country/Region        0\n",
       "Lat                   0\n",
       "Long                  0\n",
       "Date                  0\n",
       "Confirmed             0\n",
       "Deaths                0\n",
       "Recovered             0\n",
       "Active                0\n",
       "WHO Region            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "24931f2d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "24931f2d",
    "outputId": "7cb4008a-2129-4643-bec3-f5e00b17f7a3"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "188"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Date'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "4ed944a4",
   "metadata": {
    "id": "4ed944a4"
   },
   "outputs": [],
   "source": [
    "total=df.groupby(['Date'])['Confirmed','Deaths','Recovered','Active'].sum().reset_index()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "9cfb4215",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "9cfb4215",
    "outputId": "51dbfaf1-ddaa-48c4-c089-38f3153f35ed"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9124c81e-5865-471e-ba7a-677391ee15a1\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Confirmed</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>555</td>\n",
       "      <td>17</td>\n",
       "      <td>28</td>\n",
       "      <td>510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-01-23</td>\n",
       "      <td>654</td>\n",
       "      <td>18</td>\n",
       "      <td>30</td>\n",
       "      <td>606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>941</td>\n",
       "      <td>26</td>\n",
       "      <td>36</td>\n",
       "      <td>879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-01-25</td>\n",
       "      <td>1434</td>\n",
       "      <td>42</td>\n",
       "      <td>39</td>\n",
       "      <td>1353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-01-26</td>\n",
       "      <td>2118</td>\n",
       "      <td>56</td>\n",
       "      <td>52</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9124c81e-5865-471e-ba7a-677391ee15a1')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9124c81e-5865-471e-ba7a-677391ee15a1 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9124c81e-5865-471e-ba7a-677391ee15a1');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "        Date  Confirmed  Deaths  Recovered  Active\n",
       "0 2020-01-22        555      17         28     510\n",
       "1 2020-01-23        654      18         30     606\n",
       "2 2020-01-24        941      26         36     879\n",
       "3 2020-01-25       1434      42         39    1353\n",
       "4 2020-01-26       2118      56         52    2010"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8cb445f8",
   "metadata": {
    "id": "8cb445f8"
   },
   "source": [
    "# Applying Facebook Prophet Model on Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "c0c8e553",
   "metadata": {
    "id": "c0c8e553"
   },
   "outputs": [],
   "source": [
    "df_prophet=total.rename(columns={'Date':'ds','Confirmed':'y'})"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "e0f26a54",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "e0f26a54",
    "outputId": "a1d59c10-9a40-4e4e-f8b2-df4e09dfffe7"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-5e0ddc1f-f9f3-4e0f-b872-274dbf0ca081\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>y</th>\n",
       "      <th>Deaths</th>\n",
       "      <th>Recovered</th>\n",
       "      <th>Active</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>555</td>\n",
       "      <td>17</td>\n",
       "      <td>28</td>\n",
       "      <td>510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-01-23</td>\n",
       "      <td>654</td>\n",
       "      <td>18</td>\n",
       "      <td>30</td>\n",
       "      <td>606</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>941</td>\n",
       "      <td>26</td>\n",
       "      <td>36</td>\n",
       "      <td>879</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-01-25</td>\n",
       "      <td>1434</td>\n",
       "      <td>42</td>\n",
       "      <td>39</td>\n",
       "      <td>1353</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-01-26</td>\n",
       "      <td>2118</td>\n",
       "      <td>56</td>\n",
       "      <td>52</td>\n",
       "      <td>2010</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e0ddc1f-f9f3-4e0f-b872-274dbf0ca081')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-5e0ddc1f-f9f3-4e0f-b872-274dbf0ca081 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-5e0ddc1f-f9f3-4e0f-b872-274dbf0ca081');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "          ds     y  Deaths  Recovered  Active\n",
       "0 2020-01-22   555      17         28     510\n",
       "1 2020-01-23   654      18         30     606\n",
       "2 2020-01-24   941      26         36     879\n",
       "3 2020-01-25  1434      42         39    1353\n",
       "4 2020-01-26  2118      56         52    2010"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prophet.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a3940fff",
   "metadata": {
    "id": "a3940fff"
   },
   "outputs": [],
   "source": [
    "m=Prophet()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3a459e5e",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "3a459e5e",
    "outputId": "e72b33e1-b276-49ac-dc28-28caba8b1caa"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:numexpr.utils:NumExpr defaulting to 2 threads.\n",
      "INFO:fbprophet:Disabling yearly seasonality. Run prophet with yearly_seasonality=True to override this.\n",
      "INFO:fbprophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n"
     ]
    }
   ],
   "source": [
    "model=m.fit(df_prophet)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "qFkRRWzaeNzW",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "qFkRRWzaeNzW",
    "outputId": "890f81a1-27ef-4ebf-827d-ccacf24e95ca"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "OrderedDict([('weekly',\n",
       "              {'condition_name': None,\n",
       "               'fourier_order': 3,\n",
       "               'mode': 'additive',\n",
       "               'period': 7,\n",
       "               'prior_scale': 10.0})])"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.seasonalities"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "30b6db11",
   "metadata": {
    "id": "30b6db11"
   },
   "outputs": [],
   "source": [
    "future_global=model.make_future_dataframe(periods=30,freq='D')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "009861fb",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "009861fb",
    "outputId": "626df514-ab85-4fad-8de7-39cad56f738b"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-e2b59f78-a81f-4a2c-b9f7-077f777c169c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-01-22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-01-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-01-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-01-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-01-26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e2b59f78-a81f-4a2c-b9f7-077f777c169c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-e2b59f78-a81f-4a2c-b9f7-077f777c169c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-e2b59f78-a81f-4a2c-b9f7-077f777c169c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "          ds\n",
       "0 2020-01-22\n",
       "1 2020-01-23\n",
       "2 2020-01-24\n",
       "3 2020-01-25\n",
       "4 2020-01-26"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "future_global.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "13925b03",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "13925b03",
    "outputId": "286105c3-1b3e-4a56-c00f-743ae2efb83c"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(188, 5)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prophet.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "b00fb617",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "b00fb617",
    "outputId": "ed6c8ff9-efc6-4893-e0f6-50d77c13d8cc"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(218, 1)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "future_global.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "a5d7c88d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "a5d7c88d",
    "outputId": "5ae4e33a-928a-408a-8ea2-a54ce46448e4"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "183   2020-07-23\n",
       "184   2020-07-24\n",
       "185   2020-07-25\n",
       "186   2020-07-26\n",
       "187   2020-07-27\n",
       "Name: ds, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_prophet['ds'].tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4e46372d",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "4e46372d",
    "outputId": "f2157d57-d827-4021-dfaa-401a6c23c297"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-201e08d7-fa99-4bd0-859d-d097b018e6da\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>2020-08-22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>2020-08-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>2020-08-24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>2020-08-25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>2020-08-26</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-201e08d7-fa99-4bd0-859d-d097b018e6da')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-201e08d7-fa99-4bd0-859d-d097b018e6da button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-201e08d7-fa99-4bd0-859d-d097b018e6da');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "            ds\n",
       "213 2020-08-22\n",
       "214 2020-08-23\n",
       "215 2020-08-24\n",
       "216 2020-08-25\n",
       "217 2020-08-26"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "future_global.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ath5OWQ-fJqx",
   "metadata": {
    "id": "ath5OWQ-fJqx"
   },
   "source": [
    "# Visualising the Predictions\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "REDiug3PfSp1",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 661
    },
    "id": "REDiug3PfSp1",
    "outputId": "e03230a7-3fd0-4d13-f548-ffd70f45f4f6"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-4e0df6f7-0065-47a6-8e97-b928b2f9f624\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>trend</th>\n",
       "      <th>yhat_lower</th>\n",
       "      <th>yhat_upper</th>\n",
       "      <th>trend_lower</th>\n",
       "      <th>trend_upper</th>\n",
       "      <th>additive_terms</th>\n",
       "      <th>additive_terms_lower</th>\n",
       "      <th>additive_terms_upper</th>\n",
       "      <th>weekly</th>\n",
       "      <th>weekly_lower</th>\n",
       "      <th>weekly_upper</th>\n",
       "      <th>multiplicative_terms</th>\n",
       "      <th>multiplicative_terms_lower</th>\n",
       "      <th>multiplicative_terms_upper</th>\n",
       "      <th>yhat</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-01-22</td>\n",
       "      <td>-9.323896e+03</td>\n",
       "      <td>-1.285895e+05</td>\n",
       "      <td>8.800867e+04</td>\n",
       "      <td>-9.323896e+03</td>\n",
       "      <td>-9.323896e+03</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-2.030360e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-01-23</td>\n",
       "      <td>-6.626094e+03</td>\n",
       "      <td>-1.178531e+05</td>\n",
       "      <td>1.031932e+05</td>\n",
       "      <td>-6.626094e+03</td>\n",
       "      <td>-6.626094e+03</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>-1101.212489</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-7.727307e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-01-24</td>\n",
       "      <td>-3.928293e+03</td>\n",
       "      <td>-1.049872e+05</td>\n",
       "      <td>1.047703e+05</td>\n",
       "      <td>-3.928293e+03</td>\n",
       "      <td>-3.928293e+03</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>10055.768575</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.127475e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-01-25</td>\n",
       "      <td>-1.230492e+03</td>\n",
       "      <td>-8.695808e+04</td>\n",
       "      <td>1.175932e+05</td>\n",
       "      <td>-1.230492e+03</td>\n",
       "      <td>-1.230492e+03</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.249814e+04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-01-26</td>\n",
       "      <td>1.467309e+03</td>\n",
       "      <td>-9.716912e+04</td>\n",
       "      <td>1.145395e+05</td>\n",
       "      <td>1.467309e+03</td>\n",
       "      <td>1.467309e+03</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.746118e+03</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>2020-08-22</td>\n",
       "      <td>2.144165e+07</td>\n",
       "      <td>2.108346e+07</td>\n",
       "      <td>2.183693e+07</td>\n",
       "      <td>2.109898e+07</td>\n",
       "      <td>2.181822e+07</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>13728.634691</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.145538e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>2020-08-23</td>\n",
       "      <td>2.164576e+07</td>\n",
       "      <td>2.127397e+07</td>\n",
       "      <td>2.206278e+07</td>\n",
       "      <td>2.127837e+07</td>\n",
       "      <td>2.204263e+07</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>7278.808727</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.165304e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>2020-08-24</td>\n",
       "      <td>2.184988e+07</td>\n",
       "      <td>2.145520e+07</td>\n",
       "      <td>2.226161e+07</td>\n",
       "      <td>2.145721e+07</td>\n",
       "      <td>2.227268e+07</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>-2146.590152</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.184773e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>2020-08-25</td>\n",
       "      <td>2.205399e+07</td>\n",
       "      <td>2.161062e+07</td>\n",
       "      <td>2.248717e+07</td>\n",
       "      <td>2.164669e+07</td>\n",
       "      <td>2.249972e+07</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>-16835.705042</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.203715e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>2020-08-26</td>\n",
       "      <td>2.225810e+07</td>\n",
       "      <td>2.180549e+07</td>\n",
       "      <td>2.272149e+07</td>\n",
       "      <td>2.182829e+07</td>\n",
       "      <td>2.273194e+07</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>-10979.704311</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.224712e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>218 rows × 16 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4e0df6f7-0065-47a6-8e97-b928b2f9f624')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-4e0df6f7-0065-47a6-8e97-b928b2f9f624 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-4e0df6f7-0065-47a6-8e97-b928b2f9f624');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "            ds         trend  ...  multiplicative_terms_upper          yhat\n",
       "0   2020-01-22 -9.323896e+03  ...                         0.0 -2.030360e+04\n",
       "1   2020-01-23 -6.626094e+03  ...                         0.0 -7.727307e+03\n",
       "2   2020-01-24 -3.928293e+03  ...                         0.0  6.127475e+03\n",
       "3   2020-01-25 -1.230492e+03  ...                         0.0  1.249814e+04\n",
       "4   2020-01-26  1.467309e+03  ...                         0.0  8.746118e+03\n",
       "..         ...           ...  ...                         ...           ...\n",
       "213 2020-08-22  2.144165e+07  ...                         0.0  2.145538e+07\n",
       "214 2020-08-23  2.164576e+07  ...                         0.0  2.165304e+07\n",
       "215 2020-08-24  2.184988e+07  ...                         0.0  2.184773e+07\n",
       "216 2020-08-25  2.205399e+07  ...                         0.0  2.203715e+07\n",
       "217 2020-08-26  2.225810e+07  ...                         0.0  2.224712e+07\n",
       "\n",
       "[218 rows x 16 columns]"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prediction=model.predict(future_global)\n",
    "prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "8_5SQo53fe86",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "8_5SQo53fe86",
    "outputId": "c3c1a9a8-8350-418e-ca9f-c939e64cbba1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-52848413-5758-4841-9941-b8f6f0a19a50\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>yhat</th>\n",
       "      <th>yhat_lower</th>\n",
       "      <th>yhat_upper</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>213</th>\n",
       "      <td>2020-08-22</td>\n",
       "      <td>2.145538e+07</td>\n",
       "      <td>2.108346e+07</td>\n",
       "      <td>2.183693e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>214</th>\n",
       "      <td>2020-08-23</td>\n",
       "      <td>2.165304e+07</td>\n",
       "      <td>2.127397e+07</td>\n",
       "      <td>2.206278e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>215</th>\n",
       "      <td>2020-08-24</td>\n",
       "      <td>2.184773e+07</td>\n",
       "      <td>2.145520e+07</td>\n",
       "      <td>2.226161e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>216</th>\n",
       "      <td>2020-08-25</td>\n",
       "      <td>2.203715e+07</td>\n",
       "      <td>2.161062e+07</td>\n",
       "      <td>2.248717e+07</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>217</th>\n",
       "      <td>2020-08-26</td>\n",
       "      <td>2.224712e+07</td>\n",
       "      <td>2.180549e+07</td>\n",
       "      <td>2.272149e+07</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52848413-5758-4841-9941-b8f6f0a19a50')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-52848413-5758-4841-9941-b8f6f0a19a50 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-52848413-5758-4841-9941-b8f6f0a19a50');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "            ds          yhat    yhat_lower    yhat_upper\n",
       "213 2020-08-22  2.145538e+07  2.108346e+07  2.183693e+07\n",
       "214 2020-08-23  2.165304e+07  2.127397e+07  2.206278e+07\n",
       "215 2020-08-24  2.184773e+07  2.145520e+07  2.226161e+07\n",
       "216 2020-08-25  2.203715e+07  2.161062e+07  2.248717e+07\n",
       "217 2020-08-26  2.224712e+07  2.180549e+07  2.272149e+07"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "prediction[['ds','yhat','yhat_lower','yhat_upper']].tail()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "Ck7xGMggf95L",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 865
    },
    "id": "Ck7xGMggf95L",
    "outputId": "ae1ce814-6347-447e-f594-a2dd44402f22"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAsYAAAGoCAYAAABFfiMCAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzdd2CV5d3G8es5KyFksSEJQ5YsERkqsgJhCyiCFdQiIOC2rdrW8bbFiXWCSlWsQp1YFQWRTQiB5LBkg0BkQxgJZK+znvcPlYoT8CQnJ+f7+ctwHuXiVszl7e+5b8M0TVMAAABAiLMEOgAAAABQGVCMAQAAAFGMAQAAAEkUYwAAAEASxRgAAACQRDEGAAAAJAVpMR4/frzq1q2rdu3a/eqzf/rTn9ShQwd16NBBLVu2VGxsbAUkBAAAQLAxgvEc49TUVEVGRmrMmDHavn37Of95L7/8sjZt2qS33nqrHNMBAAAgGAXljnHPnj1Vs2bNs35s7969GjhwoDp16qQePXpo165dP/rzPvjgA40ePbqiYgIAACCI2AIdwF8mTZqk1157TS1atNDatWt15513Kjk5+cznBw8e1P79+9WnT58ApgQAAEBlVSWKcWFhodLT03X99def+bGysrKznpk9e7ZGjhwpq9Va0fEAAAAQBKpEMfb5fIqNjdXmzZt/9pnZs2dr+vTpFZgKAAAAwSQoZ4x/KDo6WhdddJE++ugjSZJpmtqyZcuZz3ft2qWcnBx17do1UBEBAABQyQVlMR49erS6du2q3bt3KyEhQW+++abee+89vfnmm7r00kvVtm1bzZ0798zzs2fP1qhRo2QYRgBTAwAAoDILyuPaAAAAAH8Lyh1jAAAAwN+C7uW72rVrq0mTJoGOUa7cbrfsdnugYwQl1s7/WFP/YB39jzX1D9bRv1hP/7uQNT1w4ICys7PP++cKumLcpEkTbdiwIdAxylVmZqbi4uICHSMosXb+x5r6B+vof6ypf7CO/sV6+t+FrGnnzp0v6OdilAIAAAAQxRgAAACQRDEGAAAAJFGMAQAAAEkUYwAAAEASxRgAAACQRDEGAAAAJFGMAQAAAEkUYwAAAEASxRgAAACQRDEGAAAAJFGMAQAAAEkUYwAAAEASxRgAAACQRDEGAAAAJFGMAQAAUE6O55cqu7As0DHOGcUYAAAAfpdf6tb6w7kqcnkDHeWcUYwBAADgV2Uer748nCefzwx0lPNCMQYAAIDf+HymtmXmy2f6VM1uDXSc80IxBgAAgN/sySrSySKXYqs5Ah3lvFGMAQAA4BdHckq071SR6lYPvlIsUYwBAADgBznFLm09lq9aEXYZhqHcErceWbhL+08XBzraObMFOgAAAACCW0GpRxsO5yom3Cab1aJSt1d/mrtDu7MKdarIFeh454wdYwAAAFywYpdH6w/nKsxmUbjdKq/P1CMLd2v78QI92Lu5OjeMDXTEc0YxBgAAwAUpdXu1/lCuLJKqO2wyTVPPrPhaK/ed0gOJzdTtopqBjnheKMYAAAA4bx6vT18eyZPHZyoq/JtS/GLqfn2y7bhu6ZygGzrEBTrieaMYAwAA4LyYpqkdJwpUVOZRbDW7TNPUS6sP6P1NRzWqQ5zu7tYk0BEvCMUYAAAA52XfqSIdzStVrW+PZXvVeVDvfHlE17dvoPt7NZVhGAFOeGEoxgAAADhnJ/JLtetkkep8W4pnrT+st9Yd1vB29fXn3s3OKsXBdSE0xRgAAADnKL/UrU1H81Qrwi6LYejDzZl6Je2ABl5cRw/2aS7L90pxmccnn2kqtpo9gInPD8UYAAAAv6rM49WXR/IU4bDKbrVo3o7jejZlr3o1raXJ/VvKavlfKXZ7fcordatzw1jFUIwBAABQVXh9prZm5svn86m6w6Zle7L0xLIMXdkoVlMGt5LN+r9K6fb6dLrErY7xMaoTGRbA1OePYgwAAICfZZqmdp8sUHaxS7HVHFq9/7QeWbRb7RtE67mhbeSw/a9OFru8yi1xq1N8jOpFhwcw9YXhSmgAAAD8rEM5Jdp/ukT1Ih3anJmnv87/Si1rV9fUa9oq3G4981xuiVuGYeiqi2oqOjx4xie+j2IMAACAn5RVWKbtx/NVu3qYDuaU6P55O1UvOkwvD2+nyLD/1cjTxS5FOGzqlBBzVlkONhRjAAAA/EiJ26vNR/NUo5pDeSVu/eGzHbIYhl66tu1ZJ02cLnYrMsymTgmxZ41VBCOKMQAAAM7i85nalpkvq8WQzzT1p3k7lF3s0usj2yshptqZ504VuRRTzaaOCbGyW4O7FEu8fAcAAIAfOHC6WNnFLlV32PTwgl3adbJQTw1qpXb1o848c7rYrdhq9ipTiiWKMQAAAL4nt8St3VmFqlXNrudS9mrV/tP6c2Iz9WpW68wzp4tdigq36rKEmCpTiiWKMQAAAL5V7PJow+FcRYXZ9O7Go/p46zGN6ZSg6y+NO/PM6WKXIsNs6hhfdXaKv8OMMQAAAOTy+PTlkTzZDEMr957SK2kH1L9lHd3dvcmZZ7KLXKpRza4O8TFB/6LdT6EYAwAAhDivz9SWzDyVur3af7pYjy7do47x0Zrcv6UsxjdXPWcVlalO9TBdGhd91k13VQnFGAAAIISZpqmdx/N1qtilvBKPHvj8KyXEhJ+51c40TZ0scik+Jlzt6kfLajECHbncUIwBAABCWEZ2kQ7nlcrl9uquOdsUZrNo2jXtFB1ul2mayipyq2FMuNrWj5alCpdiiWIMAAAQsg7nFCsjq1CmKd316XZ5fKbeuP4SxcWES5KyitxKiAkLiVIsUYwBAABCUlZhmbYdL5DVsOiOOVuVV+rRayMuUdNa1SV9c3lHXAiVYoliDAAAEHIKSj3a+O0JFPd+tl3H8sv08vB2al3vmws8ckq+udGubb2okCnFEsUYAAAgpJS6vdpwOFeGTP31i136+lSxXhjaRh0TYiRJ+aVuOaxWdYiPqbKnT/wcijEAAECIcHt92nQ0T2Verx5bkqGtx/L15KBW6nZRTUnflGIZhjo3jFGYzRrgtBWPYgwAABACvD5TWzPzlVvs1vOp++Q8mKP/69tC/VrWkfTNVdB2q0VdGsWqmj30SrFEMQYAAKjyfL5vzio+UViq15yHtDwjW3/q2VTXtqsvScotdcths6hLw1iFh2gplijGAAAAVd7Xp4p0JK9U72/M1Oc7T2jiFY10U8d4SVJuiUvhNqs6N4oNyfGJ7yu3ierDhw+rd+/eatOmjdq2batp06b96BnTNHXvvfeqefPmat++vTZu3FhecQAAAELS0dwSZWQVavHuLL238ahu6BCnSVc2kvTN6RPhdhul+FvltmNss9n0/PPPq2PHjiooKFCnTp3Ur18/tWnT5swzCxcuVEZGhjIyMrR27VrdcccdWrt2bXlFAgAACCk5xS5tPZavTUfyNG3VfiW1qK37ejaVYRg6VeRSVLhNnRJi5bCF1ukTP6fcVqFBgwbq2LGjJCkqKkqtW7fW0aNHz3pm7ty5GjNmjAzD0JVXXqnc3FwdO3asvCIBAACEjBK3V18eydPXWUV6bFmGLouP1mMDLpbFkE4WlalWdYc6N6QUf1+FzBgfOHBAmzZt0hVXXHHWjx89elQNGzY883VCQoKOHj2qBg0anPXcjBkzNGPGDEnS8ePHlZmZWf6hAygrKyvQEYIWa+d/rKl/sI7+x5r6B+voX5VlPX2mqR3HC7Qru1gPrzim+Ei7/n5VHZXkZOloiVtx0WGqb4lQ1oniQEf9VRW5puVejAsLCzVixAhNnTpV0dHRF/TXmDRpkiZNmiRJ6ty5s+Li4vwZsVIKhV9jeWHt/I819Q/W0f9YU/9gHf2rMqznzuP5OmF69WTaQUWG2fTKyA6qF+nQyUKX2sVHqFXdSBlG8NxoV1FrWq575263WyNGjNBNN92k66677kefx8fH6/Dhw2e+PnLkiOLj48szEgAAQJV2NLdEW48VaPLiPSpxe/XSte1UPypMWcUuNYwN18V1gqsUV6RyK8amaerWW29V69atdd999/3kM8OGDdPbb78t0zS1Zs0axcTE/GiMAgAAAOcmt8StdYdzNWV5ho7kleq5oW3UvHZ1ZRWVqX5kmNrWj5bFQin+OeU2SpGWlqZ33nlHl1xyiTp06CBJeuqpp3To0CFJ0u23367BgwdrwYIFat68uSIiIjRz5szyigMAAFClFbs8WnswR9NS92nbsQI9NbiVOjeM1cnCMtWPClP7uBhK8a8ot2LcvXt3mab5i88YhqHp06eXVwQAAICQ4Pb6tPFwrl5NP6CV+07r/l5N1a9lHZ0s+l8ptlKKfxU33wEAAAQxn8/U9mP5mrn+iObuOKHfd4rX6MvilV3kUlx0uNrVj6YUnyMOrgMAAAhiX58q0rsbj+qt9Yc18OI6uqf7RcopcalGNbva1ouiFJ8HijEAAECQOppbotmbjmraqv26vGGs/tG/pYrKvHJYrbo0Plo2K1XvfLBaAAAAQSin2KVPth3T08lfq1nNCD0zpLVcXp+8pqlOCTEKs1kDHTHoUIwBAACCTEGpR/O2H9fkxXsUG27XtGvbyjCkMo+pyxvVUPUwXiO7EBRjAACAIFLs8mjx7pP6v0W75TNNvTy8nao7bCrzmLqycQ1FhVOKLxTFGAAAIEiUebxatidLD3y+U9lFLj0/rI3qRYWpxO3VFY1jKcW/EcUYAAAgCLi9PiVnZOuPc3foeEGZpl7TVq3qRqrI5dEVjWsoOtwe6IhBj2IMAABQyXl9plbvO6V7Pt2uzLwyvTisjS5pEK38Uo8ub1RDMdUoxf7AfjsAAEAlZpqm1h86rTvnbNPBnBK9MKyN2sdFK6/UrS4NY1UjwhHoiFUGxRgAAKAS25qZr9s+3qaMrCI9fXVrXRYfo8Iyr65sXINS7GcUYwAAgEoqI6tQEz/aom3HCvTogIt1ZeMaKnF/U4oZn/A/ZowBAAAqoaO5Jbr1wy1afzhPD/ZprqQWtVXkYqa4PFGMAQAAKpmcIpfGzt6sVftP6489LtI1bespt8StTgmxlOJyRDEGAACoRErcXt328VYty8jWxCsaadRl8coudqtDXLRqR4YFOl6VRjEGAACoJNxenx5ZsEsfbT2m69s30LguCcouKlOHuGjFxVYLdLwqj5fvAAAAKgGfz9Qrq/dr2qp96tm0pu7pfpFySz3qnBCretHhgY4XEijGAAAAlcBHWzL10Be71LpulCb3a6kCl0dXNKqhWtU5kq2iMEoBAAAQYKv2Zuu2j7eqdqRDzw5ppRKPT10axlKKKxjFGAAAIIB2nSjQqHc3SpJeHNZWPhnqEBetOrxoV+EYpQAAAAiQrMIyXTdrg7KL3PrXde1U3WFV2/pRvGgXIBRjAACAAChxeTVy1gbtOlmop69urbiYcDWrXV2Na0YEOlrIohgDAABUMK/P1PgPNyt1/2nd17OpLo2LVoPoMLWoXT3Q0UIaxRgAAKACmaapB7/YqdmbMzX6sjgNbFVXMeE2ta0fLcMwAh0vpPHyHQAAQAV6evnXei5ln/q2qK1xXRIUGWbVZQkxslooxYFGMQYAAKggr6bt1yMLd6lr4xp6ILGpwu02dUyIkd1KJasMGKUAAACoAO99eVj3fLpDl8ZFa3L/FrJbrercMFZhNmugo+Fb/OcJAABAOft0a6bGf7hFzWtH6OmrW0ky1LlhrKrZKcWVCcUYAACgHC3ZdUI3vb9JcdHhmnZNW/lMqXOjWEWF8z/uKxuKMQAAQDlJ339aI9/+UjWq2fXStW3lMaVLG0SrZgRXPVdGFGMAAIBysOVonoa+tU4Oq0UvXdtOFouhy+KiudWuEmMPHwAAwM92nyjUwDfWyusz9a/rLlE1h1Ud42NUPzo80NHwCyjGAAAAfnQ0r0QD31ij/FKPpg9vq5hqNkpxkGCUAgAAwE8KSj26+t/rdDSvVM8Oaa06UeHqEEcpDhbsGAMAAPhBqdurCfP2aktmoZ4YeLEa16ym9g2iFM9McdBgxxgAAOA38nh9Gjt7s1YfLtQfe1ykDvHRalc/Wg1rRAQ6Gs4DxRgAAOA3ME1Tf52/Ux9uztSIVjXUt2Vtta0frcY1KcXBhlEKAACA3+CFlL16IXW/+rWsrZGtI9W6bpSaUIqDEsUYAADgAs3eeER//WKXOiXE6K6rmqiepVhNa1cPdCxcIIoxAADABVj5dbbG/3eLLqpZTX/t00wt6lRXjNcX6Fj4DZgxBgAAOE87juXrulkbFB1m02MDLlbLOpFqVTdKhmEEOhp+A4oxAADAeTiSW6JBb6yV2+fTU4Nbq0mtCLWtFyWLhVIc7BilAAAAOEd5JW4NfGOtThSW6cVhbdWkZoQui4+RzcpeY1VAMQYAADgHLrdXw95ap53HC/TU4Fa6qFaEOiXEKNxuDXQ0+An/eQMAAPADTqdTU6ZMkdPplCT5fD7d/MEmpe47rfsTm6l9g2h1jI9RTDV7gJPCn9gxBgAA+B6n06mkpCS5XC45HA4tX75cH5+M1kdbjumWzglKbFZTlzSIUr3o8EBHhZ9RjAEAAL4nJSVFLpdLXq9XLpdLT87fqC9KG2lwq7oa2b6+WtWN5KrnKopiDAAAoG92ilNSUlSrVi05HA65XC5ZWnbVwtJGuqJRrG7v1khNa1ZX01pc4FFVUYwBAEDI++H4xNSpU5V8qEQflzZVq7qRejipuRpEhutiziqu0ijGAAAg5P1wfCLlcIk+KWum5rUj9M/BrRUTYVf7uBhZOau4SqMYAwCAkPVT4xPWiy7TRyVN1bR2hJ4d0loRYTZ1SoiRw8ZhXlUdxRgAAISknxqfWHO4UO+VtlCj2Ag9N7S1qtlturxRrCIcVKZQwN9lAAAQkn44PrHhaL7+62mjulF2PT+sjcJtVl3RqIYiw6hLoYL/JwAAAEJSYmKiHA6HrFarbHWb6IPSi1XdYdULw9qousOqKxrXUFQ4pTiU8HcbAACElO/mihMTE7V8+XJ9uHiVZpW2ltVm14vD2iq2ml1XNK6h6HButQs1FGMAABAyfjhX/J/PFum/6iDT4tXzw9qoTqSDUhzCKMYAACBkfH+uuEw23b74mErtUXpxWBvFx4RTikMcxRgAAISM7+aKyzw+mUMeVK4RoecHXayLakVQikExBgAAoeG72eIXXpiqqXvt2u2rrUeSWqh1vShd3ohSDIoxAAAIAd+fLVa3m+XtPEKTrmykrk1qqHPDWMVUoxSD49oAAEAIODNb3CZJ3s4j1NrI0tA29XRJ/SjVqu4IdDxUEhRjAABQ5SUmJsrS/HIp6Q4ZBzdp7GV11bx2pBrWiAh0NFQijFIAAIAq67u54tjWV8oY+pBq+4p037UdNaB3D7WsUz3Q8VDJUIwBAECV9N1ccVlYjHw3xKtmjRp65XfddVHN6mpbL0oWixHoiKhkym2UYvz48apbt67atWv3k5+npKQoJiZGHTp0UIcOHfTYY4+VVxQAABCCUlJSVGbY5bvm/ySrXb1dWxUXU00d4mNkszJNih8rtx3jsWPH6u6779aYMWN+9pkePXpo/vz55RUBAACEsC5X9ZQ5zCrFNJB9/hPq9dQT6pQQI4eNUoyfVm7FuGfPnjpw4EB5/eUBAAB+ktPp1NLkFH1stpfiWivJ+FpXP/G4brmmnyIcTJHi5wX0nw6n06lLL71UcXFxeu6559S2bduffG7GjBmaMWOGJOn48ePKzMysyJgVLisrK9ARghZr53+sqX+wjv7HmvpHVVvHDRs26HejRqks6V6ppU+/iyvVyCv7qW39KBWezlJhOf/8VW09K4OKXNOAFeOOHTvq4MGDioyM1IIFC3TttdcqIyPjJ5+dNGmSJk2aJEnq3Lmz4uLiKjJqQITCr7G8sHb+x5r6B+vof6ypf1Slddy2bbvKek6UWnaTkTpT4d1b6aq2QxQfW63CMlSl9awsKmpNAzZkEx0drcjISEnS4MGD5Xa7lZ2dHag4AAAgyPl8PqVV7yC17Stj7X9l375QQ/onVWgpRnAL2I7x8ePHVa9ePRmGoXXr1snn86lWrVqBigMAAIJYenq6Hpi7TU5PnJIaWBTfpZEGPPi5Rg7sE+hoCCLlVoxHjx6tlJQUZWdnKyEhQY8++qjcbrck6fbbb9fHH3+sV199VTabTdWqVdPs2bNlGJwnCAAAzo/T6VSvP70gT/dbZPkqRYM69VbfG/+iS+pH0y1wXsqtGH/wwQe/+Pndd9+tu+++u7x+egAAECIem/elPN1vkfakyVz6sg60r652o67mAg+cN84sAQAAQeuvby/VorJGMg5tlpZMlcNm0w1DB8pKKcYF4IRrAAAQlJ6cvUzPbCyUMr+SdeEzGn79aC1dulTdu10V6GgIUuwYAwCAoJO6N1uPriuQco5Knz0un6dUl7VuoR7duwU6GoIYxRgAAASVdxak6LZlpxRuNWR8MUUeT6nCHA4l9ekd6GgIchRjAAAQNOYsXalbPt4ls1qM7J/+XX/40wOKVrH69umjrl27BjoeghzFGAAABIXTxS7dseiozKg60id/l/fkfkWbxfrb/z0S6GioIijGAACg0ktZtVrjPtunk4qVbdkL8h3frTCHQ32TuMAD/kMxBgAAldrq1WlKeuJD+dr1ly31Ld35uyGqYemnAX0Zn4B/UYwBAECl9tfPt8nXrr+07mP5Nn2uyKs7avLf/hboWKiCOMcYAABUWs+nfK10T7wsu1NlON+Xw+7QkAF9Ax0LVRQ7xgAAoFJ678sj+svnXylBeRrWuZ7s7R/W74YMYHwC5YZiDAAAKp1le7I0fvYmmVn7dfS/D+tNw6fly5bpqqu41Q7lh1EKAABQqWw+mqeR/9mgMF+Z9OljMsuK5HG7lJq6MtDRUMVRjAEAQKVxMKdY/aanqrS0RCNjjsnhKZLVapXD4VBiYmKg46GKY5QCAABUCqeLXOr1YrKyC8tkfPJ3vX96v559/gUV5uUqMTGR2WKUO4oxAAAIuBKXR0PfXKdDhT4ZC5+XmfmVPFarCvNy9dBDDwU6HkIEoxQAACCgytxeXf/2l0o/mKObm9tkP7KZ8QkEBDvGAAAgYFxur3739pf64quTutw4ovaxDTVy7kLt+NLJ+AQqHMUYAAAEhNvj06h3N2rezhOyrv9YG9Le01aHQ8nJyxmfQEAwSgEAACqc1+vT2Nmb9On24+poZMqX9p58Pq/cbpdSUlICHQ8himIMAAAqlGmaumvOdr2/KVOXGsd1VWSBwhwO5ooRcIxSAACACvXnz3fq9TUHZdmxTFuXTtduh0PTpk3VqVOnmCtGQFGMAQBAhZm8eLeeX7lPLYxT+nrZqzK/HZ84deoUc8UIOEYpAABAhXhuxdd6dMkedahpqOmRFNmtFsYnUKmwYwwAAMrdG86D+usXX6lNrKGdT43W1rIS2axWTZw4UWPGjGF8ApUCO8YAAKBcfbbtmO6cs02X1I9Wx5y18pSVyOf1yuv1qlGjRpRiVBoUYwAAUG7WHDitm9/fpDphUrtjyxVfpyYnUKDSYpQCAACUi73ZhRo2c72splenXr9TH5w+prAwh6ZO5QQKVE4UYwAA4Heni1wa9MY6FZR6NNCzTfNOH5PP55XLxQkUqLwYpQAAAH5V5vZqyJvrtDe7SImenWpaI1xhYYxPoPJjxxgAAPiNz+fTje9tlPNgjmwrXtOSLYu1kvEJBAmKMQAA8Jv75+3UnG3H1ck4qk1bFjM+gaDCKAUAAPCLF1fu1dRV+9XSyNYVkYVyMD6BIMOOMQAA+M0+2ZqpBz7fKePwNmV8+pgO2SyaNo3xCQQXijEAAPhNVn59SmPe36RYs1g5nz8t01Mmt2llfAJBh1EKAABwwTYdydWwmesUHW7XHzpEyiE34xMIWuwYAwCAC7LrRKH6vb5GNouh25p5dHizU8+/8KLyc3MYn0BQohgDAIDztv9UsZJeS5fLa+qPraSnJ42Qx+2Ww+HQ8uXLKcUISoxSAACA85KZV6qk19KVU+LWtGva6NCm1fK43fJ6vzmaLSUlJdARgQtCMQYAAOfsVFGZkl5L19G8Ut11sUUps19Xm8Zxcjg4mg3Bj1EKAABwTvJL3Or32hplZBXrrlZWvXTndfK43QpzcLMdqgaKMQAA+FXFZR4NemOtNmfm6/GBF2vPglnyuN3yebnZDlUHoxQAAOAXuTw+XTtrvdIP5uj3zazas2CWLm4UpzDGJ1DFsGMMAAB+ltfr05j3N2rpnmxd38Sq2fePYHwCVRbFGAAA/CTTNPXA/J36cMsxDYy36OvZz8jjcsnn8zE+gSqJYgwAAH7Ssyu+1tTU/bqijkXLH7leHleZTJ9PFouF8QlUScwYAwCAH3l7w2E9tGCXLm8YqxYnnPK6XWdKcd++fbnEA1XSrxbjl19+WTk5ORWRBQAAVAJLdp3UbR9tVXyEoWYHl6pZfN0zL9qFhYVp8uTJlGJUSb86SnHixAl16dJFHTt21Pjx4zVgwAAZhlER2QAAQAXbeCRXN7zzpapbfToxfZI+zMviRTuEjF/dMX7iiSeUkZGhW2+9VbNmzVKLFi308MMPa+/evRWRDwAAVJADp4o09M118plSz9LN8uRl/eicYkoxqrJzmjE2DEP169dX/fr1ZbPZlJOTo5EjR+ovf/lLeecDAAAV4HRxmQb/e52yCsrUs2yLWtSK5JxihJxfHaWYNm2a3n77bdWuXVsTJkzQs88+K7vdLp/PpxYtWuiZZ56piJwAAKCclLo8Gvrmeu06WSjrgme0YI9Ty8MYn0Do+dVifPr0ac2ZM0eNGzc+68ctFovmz59fbsEAAED58/l8uvG9TUo/kKOexn6t3uOUz8c1zwhNv1qMH3300Z/9rHXr1n4NAwAAKtbkFYf16fZsdTIydUmUS+vCHHK7XIxPICRxwQcAACHqn8kZenNztixfrdDGxS9pR5hD0xifQAijGAMAEILeWX9YDy/YpXjvKWUunS7T55Wb8QmEOG6+AwAgxCzefVITP9qqhhGGLj64VHaLwekTgNgxBgAgpGw4lKPf/edLRdt9OvbKBB3Oy5bNZtPEiRM1ZswYxicQ0tgxBgAgRGw/lq8hb66TxSIllm6WJ++UfFmlwrAAACAASURBVD6fvF6vGjVqRClGyKMYAwAQAnadKFD/GWuUX+JSYskmJdSorrAwLvAAvo9RCgAAqri92YXq+9oa5RSVyfvhQ5p3ZJfCvr3AY//+/Ro2bBi7xYAoxgAAVGkHc4rV59U1Ol3i0gDfTn1+ZNdZF3jcc889iouLC3RMoFJglAIAgCrqeH6p+r62RsfyS9Tfu0MNo6xyMD4B/Cx2jAEAqIJOF7nU9zWn9p8qkmXeU/p873o5fuICj8zMzEBHBSqNctsxHj9+vOrWrat27dr95Oemaeree+9V8+bN1b59e23cuLG8ogAAEFLyS9266vkl2nmiQJ1z1si7d718P7jAg5li4MfKrRiPHTtWixYt+tnPFy5cqIyMDGVkZGjGjBm64447yisKAAAho8TlVY/nFmt3rldaNE1fvvucbHYb4xPAOSi3UYqePXvqwIEDP/v53LlzNWbMGBmGoSuvvFK5ubk6duyYGjRoUF6RAACo0twenxJfWKStOaaU/JrMnckyrVaNnzhRjRo1OjM+AeCnBWzG+OjRo2rYsOGZrxMSEnT06FGKMQAAF8A0TQ19ebHWZfmk1FnSlkWyWCxyOBzcaAeco6B4+W7GjBmaMWOGJOn48eNV/kWBrKysQEcIWqyd/7Gm/sE6+h9rerZnVx/R4iMeaeM8acMcWSwW9ejRQ/fdd58aN278s987WUf/Yj39ryLXNGDFOD4+XocPHz7z9ZEjRxQfH/+Tz06aNEmTJk2SJHXu3DkkzlsMhV9jeWHt/I819Q/W0f9Y0288+M5STd1cqosdhdq35j35vp0nnjJlyjntFLOO/sV6+l9FrWnAivGwYcP0yiuvaNSoUVq7dq1iYmIYowAA4Dw9/0my/rkhXzq5V/s+f0J/e+KfsrkKmScGLkC5FePRo0crJSVF2dnZSkhI0KOPPiq32y1Juv322zV48GAtWLBAzZs3V0REhGbOnFleUQAAqJI2HsnVI2m5UkG29NkT8rmLZS0r0EMPPxzoaEBQKrdi/MEHH/zi54ZhaPr06eX10wMAUKXNWZqqsYtOyGKxyfHFFHndxXI4HOrdu3egowFBKyhevgMAAP+zJGW1Rr69UWaNBNnn/k1/vPcPilaJkvr0ZnwC+A0oxgAABAmn06llySv06rHaMms3keZNkffoLlU3i/V///dIoOMBQY9iDABAEHA6neqTlKTSbuOk9pfIkvKGdPBLhTkc6p/UJ9DxgCqBYgwAQBBISUlRWYdrpfYDZWyYowHNa6jDkH9o6MC+jE8AfkIxBgCgknM6nfr0kCmz62gZO5NlW/ehxs+Zr5GD2CkG/MkS6AAAAODnOZ1O9brrca2PuETG104NiMnRzI/macRATp8A/I0dYwAAKiGn06mUlBQtOVQqd69J0oGN0qIX1OyPf9GowUkyDCPQEYEqh2IMAEAl43Q6lZSUpLIGbeUb+pCM4xnSF8/IYbHohqEDZLVQioHyQDEGAKCS+G6X+NChQyqr3Uy+q/8qnTqkAcZuNbz7T7rxmoHq0b1boGMCVRbFGACASuC7XWKXyyWjfgv5hk+WCrLk+GKKBr82S7de208RDr5tA+WJ32EAAASY0+nU5MmTVVZWJl9snDT0EVWzmBpeM0tXvDpT466hFAMVgd9lAAAE0Jl54rIy+SLrSCMfl0yfHuwco66X364rG9dUZBjfroGKwO80AAAC4PvzxC6XS77waGnkY7KGV9fDnSJ1RZdOurxRDUWF860aqCj8bgMAoIJ9f57YarXKGhEt7zX/kKrX0AOXRaprl466vFGsYqrZAx0VCCkUYwAAKlhKSopcLpe8Xq9Mq0M1bnlOOY5auru1Q72u6KguDWNVI8IR6JhAyKEYAwBQQb4bn6hVq5YcDofK3B7p6gd02lFHk/u3VJdGNdS5YYxqR4YFOioQkijGAABUgO+PTzgcDr344lS9tNeund7auq9n0zOluA6lGAgYijEAAOXohy/Zeb1elbk9+leGoZ1mbU24vKGSWtZWp4RoSjEQYBRjAADKyQ9fsrPZbDJrJsjs/wdtNevrhg4NdG27+rqkfpTqRoUHOi4Q8ijGAACUg7Mu7fD5ZBoWtR73D30V2VbV7RY90r+V2sdFq1mt6mpYIyLQcQGIYgwAgN+ddWmHzyej7kUy+9+rHVHN1LtZLT2Q2FSSoYYx4WpRu3qg4wL4FsUYAAA/+dGlHYZFumqUzMuvV1SYVY/0a6VOCTEyJV3SIFr1osJkGEagYwP4FsUYAAA/+OE8sdGgldTnDql2I3Wta9HfhnaWKalGhENt6kepmt0a6MgAfoBiDADAb/CjUyeq15a3241Sq0RVN9y6tY1NV3frJKvFULv6UarLLjFQaVGMAQC4QN/fJbZUj5GZOEFq118yTQ1saNMfB10hj89UXEy4WtaJlMNmCXRkAL+AYgwAwHn6bpf44MGDKvN45Ws/WN6uo6SwSLWxZGlsp3i1v6yjbBZDHTmfGAgaFGMAAM7DmRMnXC4ZzS6X7+ZpUo14GYe3aPLQTrqiy1BZDKlZrepKiK3GLjEQRCjGAACcI6fTqX9MnqzSarVkDpooNblMkZ4C9bTs0YDrLlPLSzuqee0INYyNoBADQYhiDADAOXA6nerTt59K2wyQbn5R8rhlXTVTT90/Qc0uSVJcTJha1olUhINvrUCw4ncvAAC/wOl0asWKFUrfl63Sax+T6reQvl6jDoVb9fs/3a6OXa5Q6/pRqhnhCHRUAL8RxRgAgJ/hdDrVp19/lV0yROYV10uOEhkLnpP9wDqNm/WJrh/YW/WiwmWxcPwaUBVQjAEA+IHvdolX7zul0uuelOpcJGP3Kg2IzVO9gd3VP+lvGjmwD3PEQBVDMQYA4Hu+2SUeoNIO10idr5NKC2WZ/7Tshzbq6rfn6MarkxibAKooijEAAN9KXZWme56ertIRT0m1G8vYuUIDaxWq7uBEDej7qEYO7CO7lV1ioKqiGAMAQp5pmvp4UYpGP/OevB1+JxXlyPjscTkyt2nI23M0il1iICRQjAEAIW1BcqqeXrBFaz315e14jbRtsbTqP7qsY2f95eX5GjGgt2zsEgMhgWIMAAg5TqdTi5Yma5dRR//db0o1msg4vlNW53syj+6U3W7X008+pn6JPQIdFUAFohgDAEJKyqrVGnDDeLmu+r3UuIFkHpY+fUw6tEn9R9yk1i2u0/BB/dW921WBjgqgglGMAQAhYXVaumYvTNb8rOpy3fCM5CqRkfKGjO1LJK9HdrtDf75rgnr3ZJcYCFUUYwBAlbd0RaoG3/+MPF1vlCIiZNm+VKbzfdm9pfrj5CkKdxdpYL8kde3aNdBRAQQQxRgAUGV5faZe+2y5HlqwS57et0mHt8my8t8a1LuH6t12l4YP6qurk3rJMLi5DgDFGABQReUVu3XbW0v14Z4iKbyOtHS6jB3LZHPYNWbMGA0f0JsziQGchWIMAKhSfD5T//osWY+vPq6TRrR0dKe09BUZRad1efdeeuqxR9WnF3PEAH6MYgwAqDIKSt269Y2l+ujrEsljkXX1yzJ2rZTP65UjLEwvTHlCV13FaRMAfhrFGAAQ9EzT1PQ5yXo07YSyjSjp4GZp2b9kluZp+I1j1L5lM/VN6sPLdQB+EcUYABC0nE6nFi5NVqonXivzoyWXKWvqizIy0r7ZJXY4dN8dEynEAM4JxRgAEJTWrFuv0X/4m1w9xkn1akl706Tk12WWFWj4jWN06cXNldSnN6UYwDmjGAMAgorH69O/5q7Q3+dmyDXySakoR8b8f8qyb61M05TD4dCfbp/ALDGA80YxBgAEBdM0tftkoW77z0qlHvNI0Y2k9PdkbPpcdsOnvzz5rOyuIvVjlhjABaIYAwAqvbxil+6cuUwf7y2TS1Zp+xIp7X0ZZQXqfFUvPfboZA3s0zPQMQEEOYoxAKDSWrU6TS99sVbJnkY67QuTjuyUbfUsGacOyev59gi2p59Q926MTQD47SjGAIBKx+cz9e6CFRr37+XyNbtSyj0mrZolZTjls1p1/U23qFH9Ohp+7TWMTQDwG4oxAKBSWZ6Sqqfmb9Qqb4J8jTtKq9+RNs2V1fRJVqscDof+cPsENW7cWHFxcYGOC6AKoRgDACoF0zT15rxk3fb2KvmadJJxYrdsy/8l36lDstsd+udzU1Wcn6vExER17dpVmZmZgY4MoIqhGAMAAq6g1K17Zi7VO7uK5YtvJ614Q9q2SANGjFa7ls00bGBfjl8DUO4oxgCAgPH5TKUfOKVb33FqT76kY3ukJS/LKDgphyNMD9w1UYk9ugc6JoAQQTEGAAREUZlHt/17iT7c65JMn4yUN2VuXijDYqhnYm899fhj7BIDqFAUYwBAhVqdlq73Fq3S/LImOuKNkA5tky3lNdkKsuWzWuRwODTlicc5bQJAhaMYAwAqROqqNL008119mlEo32XDJJ9XWvmytH2pfFarbhozTq2aX6TevXtTigEEBMUYAFCuyjxevfvFCt029QN52w2QLq8m7UmTUt+StTjnzBFsd0wcTyEGEFAUYwBAufD6TH2wcIWeX75b28168l42TNq9Wlr3kYxTh+QIC9Pjz02VuyiPXWIAlQLFGADgV06nU3MXJyvdE6dVOWFSeIKMvU7Z1v5XvuwDslqtuu7343THhHHqxYkTACoRijEAwG+WpaRq0P3PytNlpFS9pnT8S2n1uzJOHVD/kTepVfObNXRAX45gA1ApUYwBAL/ZqtVpen1BmuYX1JMncZJ0ZIeML56V5fhumaYph92hP3MmMYBKjmIMALhg6enpevmtd/Tfg4Z87fpL7nxZU6bJ91WK7Ha7Hp7yvIzSAvVL6sMMMYBKr1yL8aJFi/SHP/xBXq9XEyZM0IMPPnjW57NmzdKf//xnxcfHS5LuvvtuTZgwoTwjAQD8ZEXqKvW/53F5uv5eahclbVkgY81s9R86XM2HPKLhg/qqd88egY4JAOes3Iqx1+vVXXfdpaVLlyohIUFdunTRsGHD1KZNm7Oeu+GGG/TKK6+UVwwAgJ+tTkvXzIWr9FluHXn63iMd2y19OllG1n45wsJ058RxGtI3MdAxAeC8lVsxXrdunZo3b66mTZtKkkaNGqW5c+f+qBgDACo/p9Op5ckrVBYWqykLN8t7ySDJLJE1+TX5ti2R1WrR8JvH6c6J45gjBhC0yq0YHz16VA0bNjzzdUJCgtauXfuj5z755BOlpqaqZcuWevHFF8/6c74zY8YMzZgxQ5J0/PhxZWZmllfsSiErKyvQEYIWa+d/rKl/BPM6rlm3XqPHjJW77QCZna6VLr1a2rFcRvq76pPUV42636MBvXuq25WXS1KF/Ts6mNe0MmEd/Yv19L+KXNOAvnw3dOhQjR49WmFhYXr99dd1yy23KDk5+UfPTZo0SZMmTZIkde7cWXFxcRUdtcKFwq+xvLB2/sea+kewrePylav09qI0rTwdJteY16SwCGnvWlmdH8g8dVB2u1333Xu3BvbpGbCMwbamlRXr6F+sp/9V1JqWWzGOj4/X4cOHz3x95MiRMy/ZfadWrVpn/njChAn6y1/+Ul5xAADnwDRNLUpO1ZPvLVB6QaTMRh2kam4ZGekyNs+X/fRB3f7Q43K4izRsYD9173ZVoCMDgN+UWzHu0qWLMjIytH//fsXHx2v27Nl6//33z3rm2LFjatCggSRp3rx5at26dXnFAQD8gvT0dH2+OFlbVV8LD5TIrN1dsp+WVr8jy85lGnj1UNW9YYQG9e2ja/v3lsNmCXRkAPC7civGNptNr7zyigYMGCCv16vx48erbdu2+vvf/67OnTtr2LBheumllzRv3jzZbDbVrFlTs2bNKq84AICf4PWZmrs0Rb/7x3R5Lx0iRdaSdFBaNFXanSrD55U9LEzjbrlFQ/v1UpjNGujIAFBuynXGePDgwRo8ePBZP/bYY4+d+eMpU6ZoypQp5RkBAPATTNPU50tT9NzirVrvqS9vt1ukQ1tlLH1FxuEtkmnKarVq1Jixmjh+rHp07xboyABQ7rj5DgBCiNPp1MKly7XTrKtPDnilmk1lZGfI6nxP5qEtstnt+vMTz8pSWqiB/froqquYIQYQOijGABACnE6n/v3WLL29YpM8Xa6X4hpIOiJ9PkXat079R9yklqOGaNiAvurTi9vqAIQmijEAVHFLV6Tq6tv+Knen66RrhkgF2TKWTZfx1QrJ55Xd7tB9d0xQ30QKMYDQRjEGgCrI7fVpcXKqXlvypdJKa8k99GEpP0ta9qq0c5nsNqv+8I+n5XAXanD/JEYmAEAUYwCoUpalrNKHi1O0y4hTWmapzFotpdKTsqa9Lt+OZbLK1ODrb9Kk8bdoUJ9esliMQEcGgEqDYgwAQc7nM7VoRaqeem+h0k/bZF7UWbJYJfceafFLMvasUv/hN6hR0p81bGBfDerTU4ZBIQaAH6IYA0CQSlm1Wh8tWqFtiteq4x6pRjcpLE/6cq6Mncmy5GXKNE3Z7Q7de9utGtC7B4UYAH4BxRgAgojT6dSy5cnKstXU9NQM+Vp0k2wOqWinlP6+lJEmw+eVIyxMD015Xt6ifI5dA4BzRDEGgCCxInWVBo6eINdl10gt20nN60jbl8nYtliWnMMyv72U48ZbxmnC+LHq3o0yDADng2IMAJXcspRVenNRmlbkx8g16jnJVSxt+FTWzfNlFufKZrfrr08+J5UWaFC/JHXt2jXQkQEgKFGMAaCSWpqySlP+85lS8iK/faGuSJZ1H0ub5snuLdXtDz0um6tQQwb0VWKP7oGOCwBBj2IMAJVIWlq6Fi1L1n6jlt7fflpmw0SpWr6U9q6MrQs1YOhwNbj8Ll3dP0lD+/aS3WoJdGQAqDIoxgBQCRS7PPp86UrdfP/f5Ll0mJSQINWMlFJnSlsWyvCUyREWpjsmjNOgPj1loxADgN9RjAEgQEzTVG6JW698lqzZGw7pa18Nea5+6Jsrm1e8IWPncslT9s0LdeMmaNKtYzldAgDKEcUYACpYidurz5au1OvLt2q3NU7HvdUkX20ZBzbKumulfPvWy241dPffnlSYq1BX9++rbpwwAQDljmIMABUkt8St6Z8u1xspO3XQ3kAKbyZlHZG2LZF2LJfhLlb/ETcpfkgvDRvQV4OTesnKlc0AUGEoxgBQzhavSNVLc5K1I+JiHfREStWaSF+nS1sXSZlfyWqxyDRNORwO3X/nBPXp2Z0b6gAgACjGAFAOnE6nFi5Zrj1GHf13Z67M+E5SQb606T1p8wKptECGYSgsLFz/fO55FeXnKjExkTOIASCAKMYA4EdOp1Mz3pqpd9J2y9txuFQvTop2SCvekHYsk9XnlmmasjkcumXsWI0bO5YyDACVBMUYAPzA5zM1f/lKjfjz0/J0GCYNGirlZMpY+oqMPamS2y27w65Hn54qT3Ge+vTpTSEGgEqGYgwAF8g0TRWWeTVvWYqmr/hKmzx15Em6S8raL81/RvraKbvDrj/+4ymVnTqm64dfy+kSAFCJUYwB4DyVur1auHylZi1dr/32BtqWb5WqNZGRtVvWDXPk27dOVqtV19w4RrfdOk79EnsoMzNTcXFxgY4OAPgFFGMAOAemaWpJyirNXrhSu23xWnPCIzO2jVRSJh1aJ21ZKB37Sv1H3KSmw/vq2kH91DexR6BjAwDOA8UYAH6Bx+vT58tW6unZS7Q+1y6zSUfJa5UKt0trPpT2rZXVU/bNcWt2h+67YwKFGACCFMUYAH5C6qo0fbwoWZsUr9XZVqnmVVJYjrThUxk7k2XJPy7TNGW32/WPZ16UuyhP/ZL68EIdAAQxijEAfMvpdCo5eYWKw2L1z/nr5W03QAqrLp3eIi1/Vdq/QYbpkyMsTA9NeV7eonwN7NdHV13FC3UAUBVQjAFAUsqq1Row4ia5LhkstWspdbxWynDK2DBHluz9Mk1TVptVN948XhPHj+V0CQCogijGAELa8pWrNHPBaq3Ij5LrpmmS6ZO+SpF142cyczJlt9v14FPPyyzN18C+SYxKAEAVRjEGEHJM09Sylav19NtztSI3QuZFXSRbiSxbFkhffia7q0C3P/i47O4iDRmQpF49ugc6MgCgAlCMAYSMFamr9OmSldptqa+lGadkxvWSwvOl9Pdl2bZIA4cMU93xE9W/bx9dNyBRYTZroCMDACoQxRhAlZa6Kk0Lli7XPms9fbzpkMzGnSSbXYrwSSn/lrYtkeEpkz0sTLeMGaOh/RJVzU4hBoBQRDEGUOWkp6dr4dJknbbH6vXFG+S9uJcUVVtqECFtXShjd6qMrH2SacpqteqGW27VpFvHqkf3boGODgAIIIoxgCrD6XRqxlsz9U7qdnnbXy01aix1TJAObpKR8m8ZBzdKXrdsdrvuf/xZWUoLNKhfEidMAAAkUYwBBDmn06kVK1bIHhmrh//9mTyXDZWGDJXyT8pIf0+WXSkyC7Jls9t199+flFGSr8H9ktSnF7fTAQDORjEGELTS0tKVNHCQXM17yux0jdTvHin7oLTwBWnPatntNt318BOylhVqYL8+6tOzuwzDCHRsAEAlRTEGEHTS0tI1Z3GKFhyzqOzm6VJEjJS5S5bUN2Xu2yCr1aIho27WxHFjNaB3T1ktlGEAwK+jGAMIGqtWp+mlmR9ozt5i+dr1l6KryziwUcb6T2TLytBtDz4uV2FfXTOwrwb26cnuMADgvFCMAVRqq9PStWhpso47amvmyh3yteotXWaV9qTJ8uWnGty7m2qNGKrevRM1rG8vxVazU4gBABeEYgyg0klPT9fiZcnKc9TUKwvWyNu8m1QjTmpVV9qZLG2YIyPvuGxhYRp14+81fECiIhz86wwA8NvwnQRApeH1mZq7NEU3PPCEPBcnSo3ipc4jpMPbZKz/RJZ9a2WWFclqtWr478fp9lvHqndPTpcAAPgHxRhAwBW7PPr35yv0WvoBfe2rIU//P0p5J2Ss+VCWr1bILMiSzW4/c8LEkAFJ6tWje6BjAwCqGIoxgIDJL3XrxU+W67XV+3S8WrzkrSVj/zpZdybLd2CTHHabbnvwcVnKCjSwX5L69eohCydMAADKCcUYQIVbsiJV/1qwVpuMhjrkrS5Za0rr50gb58koK1D/ETep4fABurp/kgb16Sm71RLoyACAEEAxBlAh0tPTtXBJsr4y6mrOnv9v787Do6oPf4+/z5mZbAiEJFIUbFkjkiZB1iRkY1GoWvyJC1KXavFi+7Q/7G210utSblHRPvZ2lxYf67ULov3ZulxcMXsy7CBuxRYJZTdkSEhISGbmfO8fEyIU4edyJjPBz+t58jjJnPnm+/0w4Ccn3znTghk0Go4cgs3/BVtegs42LMsiITGJ//mtW5hRojfjEBGRnqViLCJR4/f7KSsvx9unP3c//gKhsbMh/RxIsmD1I/BuOR4TxhiDNyGBr990Mzff9HXy8/NjPXUREfkcUjEWEdcZY3itsobZl19B54gCzPj/gOnfhoYdWC/9FOuffnDC+Hw+7nvo53S0NjNt6lQVYhERiSkVYxFxzdFgmH8daucnf63kv9Zuo+Om5eD1wZ53sMt/h6nfiM/n47v/+0F8Ha1ccvF0CgoKYj1tERERQMVYRD6jUNjhUHuQ3z5XzsqN/+J9+2yOGi8kpsPWl7C2VZFw6F/8j0VLcNpmMnvWDC4uLdL+YRERiTsqxiLyqQTDDk+/XMEjZW+y3T6HA04yOBlY/1wLb62G+s1YFlyYV8x/PvIrrpg5lf7JvlhPW0RE5JRUjEXkE6mqruWpVypY7wxmfXMiJA2Hhn/BW6/BO+XQ0YrHtjG2RUJCAj99cAmlejMOERHpBVSMReRjqayu4eHHn+bFPQZndCl4vLBrLWz4Gxx4L1KGjSEhIZGf/PSntDY3UVpaqhfUiYhIr6FiLCKn5Pf7+evfnuVQ6ggeX7cTZ/h06BuCd8qwNj2PfXg/xhh8CYks/cnDtLU06eoSIiLSa6kYi8gJjl17OPGsVH64bCWh3EshfA4M7gvrnoHNL2C1N5OQmMg9D/0fnLbDzJg+TWVYRER6PRVjEQHAcQyvVVZz+ezL6Ryehxl/OVxyBzQfwKp4FOvdcuhsx+PxcM3X53Pr/JsoKpwS62mLiIi4RsVY5HPM7/fz6uoyRo2bTPmuDp7xv0PHzcvBlwQH/on90k8x/6jD5/Xwnbvvx9fRyqUXT1chFhGRM5KKscjnjN/vZ/XrZXhSUlm87AmCw/NhfwMknQV9zoV3yrG2VeE7uJ1bFy2htWEcV19xOTOnFmPbuvawiIicuVSMRT4H/H4/q8vK8PVJ5d5fPEpweB5kfhFm3wMdbbB9DWyrhp1bsDBcmFfMbb/5Gf9xcSmtgQbOPffcWC9BREQk6lSMRc5gtbV1PPr4/+XPL1URGpkPmUUwZwmEOmHHBuz3amDHRjyEAQhbkJCQeMK1h1tjuQAREZEepGIscoaprqnlldVlBBIzWP5iLeERBXDtV8EJw84t2GtWwPa1+EyIBYuWcORwCbNmTGVAcgLr/TW69rCIiHxuqRiL9HLGGMqqalhdVk6jL53fv7KG8PA8yBgCE6+G3W/D5hfgH3Ukmk5uXbSEw82TmVpaymUzSkhN8nXvHZ5RWhTj1YiIiMSOirFIL+E4hs6wQ3VtHRUVFaT0S2X7B000+AbyUt1GwkNyIeOLMHEI7HkXq/xR7PfXYFoD2B4Ps+bMY95113NxaRH9k334PHaslyQiIhJXVIxF4lAo7FBRXUtZeQXZk/LZ1xKkfN1mTEoaL7/2GuH0oXDOIEgdC0Hgy2fDvr9jlT+K9f4aaA3g9fn49v+6D3O0hVkzpnFRSZGuKiEiInIaKsYiPcjv91NRUUFpaSkAFRUVFBeX0B4MU1ZewQUT8vjHoRAvlNWwdcdenPQvwr5d0DcDrGxoBwpvgtYA7H0XtqzC2r8Nq7EeQkG8Ph/fNxClgQAAFGZJREFUuft+PEdbuHj6NKaXFGJZKsMiIiIfh4qxnBGMMZ+6AIbCDh0hh6BjCIUdDOC1LXweG9uie1zbgnVr1lBdVUlRcQnGQEVlBQPS0jjY2Ej+lGKCjkNlRQXj8wrpCDus99cyIX8KlmXx/55+kuf/soJQKIQnKRkS+xLuk471zBpMxlBM+pegqRm8iZCeB6khCOyG3W9Cw04I7MY6EsBuO0T4yCFwHCzbJiEhgf+85wFCbc3MmjGNi0uLVIZFREQ+hagW45dffpnbbruNcDjMLbfcwqJFi064v6OjgxtvvJGNGzeSnp7OU089xdChQ6M5pc8NY8wJnx9flD6qRP77mczy8nIKi0pwMFRUVJKWlkZjYyNTiktwHENNVSWFxSXYtkVddRUlJcXYlkV1VRVpaek0Bg4ypbCYkIGqigryC4sJO4aa6komFhThOIa1ddX0H5BG86EA+YVFeG2b9XU1TCkqjsypporUtHQOBRqZXFBEZ9ihtrqK8flTcBxDnd/P8NxJHO50+PuWjaT270fzgT0UlE4j2WPx1gY/kwoilxzb4K9h3OQphMIO/jVrSO6fxsHDRxg8OpfDHQ7b/vEeA7+USXsY9u/eSUpSEp1H2/jil4ZhW7Cv/j1SU5J5ecVyQmGw//QqJqkvTkIKJPWF5H5YW8og6SxMwiB48QAk9gF7AlR1gHEg46vwzcvAsgh5PvyrZwDaD0PDDnjjZTi4Az7YAYFdWE4Yr88HQDgcxufzceuiJRxtbeaL5wyko6WZi6ZP1TvRiYiIuMAy/96gXBIOh8nMzOS1115jyJAhTJw4kSeffJIxY8Z0H/PII4+wdetWfvvb37Jy5Ur+9re/8dRTT5123AkTJrBhw4ZoTPmU/H4/r5eVU1BYRNhAVWUlaelpBBojhS5sDDWVleQVFmNbsKa2hvT0dJoCjRSVlGBbFrXVVRQUFRMMOVRVVpBX+GH569s/jYONB7lw8hSCYYeqstVMmToD27LYvLaWSQVT8Ng2W9bWkpGRTktTE/lTPiyKF+ZNIRgOU1u3huG5k2gJOry19U18Z/Wn5UgbIzJH47Wg/u9vMjorG68NO97ayKC0/oSaA6SkpvHrn/2EoJWAndIXEpJxPEnYSX0wCSk43sTIWwT7krBxIBTECXZimxA4IczRI9jBNug8StjyQEIyJPbBTj4LElJwvElYiX0gIRnjS4bEFPAlQjgM4U4IB7GcMISDmM52rM4jWB1tOJYncmxiH6zEyFxISO76SAHbc/o/uHAw8uYVnW1g2ZGimpACtssvOutsg/YWONoCR1sjJbejNXI7FIx8P8sGy4r8F7BDR6HjCBxuwA78C44cwgmHsD0eLCJ/fzweD1fNu57rrr8Rr8diTW0100pLKZxS0KNnhPfu3as3+HCBcnSfMnWHcnSX8nTfp8n00/bFqBVjv9/P4sWLeeWVVwBYunQpAD/84Q+7j5k5cyaLFy8mPz+fUCjEoEGDaGhoOO3/9Hu6GPv9fkpvXEjQTsJOPguTGCl6JHQVtqRI+TOWjeWEIuUu1Bl5A4VwEDvYDh1HMMFOrMQUSEzB8SUfVxS7xjq+9B0TjozX/dHR1lW2OrASUzDHCuKxx0ZTZ3tkTbYHvD7w+LpL3mkFj0Yee6ygdrZFPg8ejTz+2FiehMhtXxIknhUpxMcX2+Mf39E1RueRD8fCiozj7RrL4+0aq0/kwwlFHtdxJPLReez28V87Ah3tkbO7tjcyRvdHAlZS1593OBT5QeBoK6HWAAQ7sW0bjzdyFvhYqT3V7YuuuJYZl18DwNb1deROLOCsRC9/3+Rn2tSpJPts/DXVTJ06NS6uJ6x/5N2hHN2nTN2hHN2lPN3Xk8U4alsp9uzZw3nnndf9+ZAhQ1i7du0pj/F6vfTv35/GxkYyMjJOOG758uUsX74cgP3797N3795oTfskzz//PJ0zboOU/l3vDdalow06j2COFbZwCONNjPxa3ePtKmkJOIl9IgUNMMbpLnjmWEFsPwxN+7sKXntkrFDouMLo/bA0JqRA0lngS8J0nW2MFLqukthdGI8rkuFg1zhdY3kTIre7ij0JyRA8ihWMnMG0Qx3Q2YZztBVPMHI7dLQVwiEs28bj8WIBISeM7U3A8vgIexPwJPfDJKYQPtoGR49gBdvxOJEzwWEnjG1/eCb02FnRUCiEMc4J455wfziEcU59/0eOZUUK6sc69vhxj83RiqzNBIPY4cj9dN3vbfPxjdvupOVwEznjJ+GxLN7avJ4Bqam0Hm5mwuQ8EjwWWzasY9LkPCwL1q9dy8RJk3GA9WvXMHlyHuPGj8e2LWzL4vKCHBK9NpZlcUledvfT6/yRIwB69Ll+Kg0NDbGewhlBObpPmbpDObpLebqvJzPtFS++W7BgAQsWLAAiPwH05E9is2fP5mfXLqCzow1P6Ch0tBNqb4mcNTzFWcJQKFLojt1vbC9hLDxOCAvzkcdato332FihMB7vyWccP/LYU5yd/O+OPf7+hIQEbv3hEg43HSJnYgEQOZM5Pr+QRI/N1vV1DOjaCzwxP7Jnd72/hgvzCgmFHdb7a7hgfB7GwNZ1dfQbMIC2w02MyyvE07UdJL+wiGSfzSZ/LYXFJVgW1FVH9hAHGhvJLyrCGKirrmR8flFkL3BtZA/yoUCAvIJCEn02G/01FBWX4vVY+GuqKSouxgKqq6vISE9nZ309l1x2GQCVFZUUFEX2Nh97wZzHjmxrSe/aClNaWoLXtqmqqjzhShHp6ek0Njae8LWPfke4eSc/aa696sN7r5rTffu6q+ecfGwvobMf7lCO7lOm7lCO7lKe7uupTLWV4mOoqq7lD8++RNbEfLxW5EVd6WlptBxuoqCwiCSvh/V1NeQXFREMG/zVVaSmpdF0KMCEvEI6ww7+mmomdO0V3rymhsKiEhK8NmtrqxmQFtmPfKwwvvriKr5yaaTcVVd9WO5qqqq69zbnFUZewOavqaKopASfJ/Lr9+LiYmzborqqkvS0DAKBRkq69jlXVlZQVFxC2BgqKyq7r6ZQWFxCfl4+Hhs8toXHsvDY1ifexxp2DMYYvDF84wj9Cst9ytQdytF9ytQdytFdytN9Z8Qe41AoRGZmJq+//jqDBw9m4sSJrFixgqysrO5jfvOb3/Dmm292v/jur3/9K08//fRpx41FMYbPdjmwT0p/qT49Zec+ZeoO5eg+ZeoO5egu5em+M2KPsdfr5de//jUzZ84kHA7zjW98g6ysLO69914mTJjA7NmzmT9/PjfccAMjR44kLS2NlStXRms6n5muCysiIiJyZovqHuNLLrmESy655ISv/fjHP+6+nZSUxF/+8pdoTkFERERE5GOJ3WZQEREREZE4omIsIiIiIoKKsYiIiIgIoGIsIiIiIgKoGIuIiIiIACrGIiIiIiKAirGIiIiICKBiLCIiIiICqBiLiIiIiAAqxiIiIiIigIqxiIiIiAigYiwiIiIiAqgYi4iIiIgAYBljTKwn8UlkZGQwdOjQWE8jqhoaGjj77LNjPY1eSdm5T5m6Qzm6T5m6Qzm6S3m679NkWl9fz8GDBz/x9+p1xfjzYMKECWzYsCHW0+iVlJ37lKk7lKP7lKk7lKO7lKf7ejJTbaUQEREREUHFWEREREQEAM/ixYsXx3oScrLx48fHegq9lrJznzJ1h3J0nzJ1h3J0l/J0X09lqj3GIiIiIiJoK4WIiIiICKBiLCIiIiICqBi7YteuXUydOpUxY8aQlZXFL37xCwACgQAXXXQRo0aN4qKLLuLQoUMA/PnPfyYnJ4fs7GwKCgp44403usd6+eWXOf/88xk5ciQPPvjgKb/nE088wahRoxg1ahRPPPEEAG1tbVx66aWMHj2arKwsFi1aFMVVuyNesgOYNWsWubm5ZGVl8c1vfpNwOBylVUdXPGV6zOzZs/nyl7/s8kqjK55yLC0t5fzzz2fs2LGMHTuWDz74IEqrjq54yrSzs5MFCxaQmZnJ6NGjeeaZZ6K0avfFS44tLS3dz8mxY8eSkZHBd7/73SiuPDriJU+AJ598kuzsbHJycpg1a9anug5vPIinTJ966ilycnLIysrizjvv/O8nb+Qz27t3r9m4caMxxpjDhw+bUaNGmbffftvccccdZunSpcYYY5YuXWp+8IMfGGOMqa2tNYFAwBhjzIsvvmgmTZpkjDEmFAqZ4cOHm+3bt5uOjg6Tk5Nj3n777ZO+X2Njoxk2bJhpbGw0gUDADBs2zAQCAXPkyBFTVlZmjDGmo6PDFBYWmhdffDHq6/8s4iU7Y4xpbm42xhjjOI6ZM2eOefLJJ6O7+CiJp0yNMeaZZ54x8+bNM1lZWVFdt9viKceSkhKzfv36qK852uIp03vvvdfcddddxhhjwuGwaWhoiO7iXRRPOR5v3LhxprKyMiprjqZ4yTMYDJqzzz67+7l4xx13mB/96EfRXn5UxEumBw8eNOedd5754IMPjDHG3HjjjWb16tWnnbuKcRTMnj3bvPrqqyYzM9Ps3bvXGBN5kmRmZp50bCAQMOeee64xxpi6ujpz8cUXd9/3wAMPmAceeOCkx6xYscIsWLCg+/MFCxaYFStWnHTcwoULzfLlyz/zenpSPGTX2dlpLrvsMrNy5UpX1hRrscy0paXFTJkyxbz99tu9rhj/u1jmeKYU438Xy0yHDBliWltbXV1PrMTDv5vbtm0zQ4YMMY7juLKmWIpVnp2dnSYjI8PU19cbx3HMrbfean73u9+5vbyYiFWm69atM9OmTev++h/+8AfzrW9967Rz1VYKl9XX17N582YmT57MgQMHOOeccwAYNGgQBw4cOOn4xx57jK985SsA7Nmzh/POO6/7viFDhrBnz56THvNxjmtqauKFF15g+vTprqyrJ8RDdjNnzmTgwIH07duXq666yrW1xUqsM73nnnv4/ve/T0pKiqvr6mmxzhHg5ptvZuzYsSxZsgRzBlxMKJaZNjU1AZHn57hx47j66qs/8nv2BvHw3ARYuXIlc+fOxbIsV9YVK7HM0+fzsWzZMrKzszn33HN55513mD9/vttL7HGxzHTkyJFs27aN+vp6QqEQzz77LLt27TrtfFWMXdTa2sqVV17Jz3/+c/r163fCfZZlnfQPRnl5OY899hgPPfSQq/MIhULMmzePhQsXMnz4cFfHjpZ4ye6VV15h3759dHR0UFZW5urYPS3WmW7ZsoXt27dzxRVXuDJerMQ6R4jsv3vzzTeprq6murqaP/7xj66NHQuxzjQUCrF7924KCgrYtGkT+fn53H777a6M3ZNinePxVq5cybx581wftyfFOs9gMMiyZcvYvHkze/fuJScnh6VLl7oydqzEOtMBAwawbNky5s6dS1FREUOHDsXj8Zz2MSrGLgkGg1x55ZVcd911zJkzB4AvfOEL7Nu3D4B9+/YxcODA7uO3bt3KLbfcwnPPPUd6ejoAgwcPPuEnmd27dzN48GDWrl3b/eKG559//pTHHbNgwQJGjRrVa14EEU/ZASQlJXH55Zfz3HPPRW3N0RYPmfr9fjZs2MDQoUMpLCzkvffeo7S0tAdW7554yPHYGAB9+/bla1/7GuvWrYvuwqMoHjJNT08nJSWl+/tfffXVbNq0Keprd1M85HjMG2+8QSgU6tVvahEPeW7ZsgWAESNGYFkW11xzDXV1dVFfe7TEQ6YAX/3qV1m7di1+v5/zzz+fzMzM00/8E20SkY/kOI654YYbzG233XbC12+//fYTNpnfcccdxhhjdu7caUaMGGFqa2tPOD4YDJphw4aZ999/v3uT+VtvvXXS92tsbDRDhw41gUDABAIBM3ToUNPY2GiMMeauu+4yc+bMMeFwOBpLdV28ZNfS0tK97ykYDJprrrnG/OpXv4rGkqMuXjI93o4dO3rdHuN4yTEYDHa/GKezs9NceeWVZtmyZdFYctTFS6bGGDN37lzz+uuvG2OMefzxx81VV13l+nqjJZ5yNMaYO++809x7771uL7PHxEuee/bsMYMGDep+odjdd99tvve970VjyVEXL5kaY8yBAweMMZG9y7m5uWbbtm2nnbuKsQuqq6sNYLKzs01ubq7Jzc01q1atMgcPHjTTpk0zI0eONNOnT+/+Q5o/f75JTU3tPnb8+PHdY61atcqMGjXKDB8+3Nx3332n/J6PPfaYGTFihBkxYoT5/e9/b4wxZteuXQYwo0eP7h770Ucfje7iP6N4yW7//v1mwoQJJjs722RlZZnvfOc7JhgMRnfxURIvmR6vNxbjeMmxtbXVjBs3zmRnZ5sxY8aYhQsXmlAoFN3FR0m8ZGqMMfX19aaoqMhkZ2ebadOmmZ07d0Zv4S6LpxyNMWbYsGHm3Xffjc5ie0A85bls2TIzevRok52dbS677DJz8ODB6C08iuIp02uvvdZccMEF5oILLvhYV5vSW0KLiIiIiKA9xiIiIiIigIqxiIiIiAigYiwiIiIiAqgYi4iIiIgAKsYiIiIiIoCKsYhIr7Z48WIefvjhWE9DROSMoGIsIiIiIoKKsYhIr3P//feTmZlJYWEh27ZtA+CXv/wlY8aMIScnh2uvvTbGMxQR6Z28sZ6AiIh8fBs3bmTlypVs2bKFUCjEuHHjGD9+PA8++CA7duwgMTGRpqamWE9TRKRX0hljEZFepLq6miuuuIKUlBT69evH7NmzAcjJyeG6667jT3/6E16vznmIiHwaKsYiImeAVatW8e1vf5tNmzYxceJEQqFQrKckItLrqBiLiPQixcXFPPvss7S3t9PS0sILL7yA4zjs2rWLqVOn8tBDD9Hc3Exra2uspyoi0uvo920iIr3IuHHjmDt3Lrm5uQwcOJCJEydiWRbXX389zc3NGGNYuHAhqampsZ6qiEivYxljTKwnISIiIiISa9pKISIiIiKCirGIiIiICKBiLCIiIiICqBiLiIiIiAAqxiIiIiIigIqxiIiIiAigYiwiIiIiAsD/B41UTBPd+VmrAAAAAElFTkSuQmCC\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.plot(prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "Hwt_P1nCgsUf",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 865
    },
    "id": "Hwt_P1nCgsUf",
    "outputId": "ca9e8191-50f6-4860-c3cc-a6504d2597b9"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 2 Axes>"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 648x432 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.plot_components(prediction)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1DdYx6dYhgN6",
   "metadata": {
    "id": "1DdYx6dYhgN6"
   },
   "outputs": [],
   "source": [
    "from fbprophet.plot import add_changepoints_to_plot"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "FZz-B7rbhyXC",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 702
    },
    "id": "FZz-B7rbhyXC",
    "outputId": "acc5fb29-bb60-4c2e-920f-7fc626438d5d"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[[<matplotlib.lines.Line2D at 0x7f9818902f50>],\n",
       " <matplotlib.lines.Line2D at 0x7f98187db450>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187d4310>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187dbfd0>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187db410>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187e6250>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187e6d90>,\n",
       " <matplotlib.lines.Line2D at 0x7f981876e950>,\n",
       " <matplotlib.lines.Line2D at 0x7f981876efd0>,\n",
       " <matplotlib.lines.Line2D at 0x7f98187dba90>,\n",
       " <matplotlib.lines.Line2D at 0x7f981876ef50>,\n",
       " <matplotlib.lines.Line2D at 0x7f9818777590>,\n",
       " <matplotlib.lines.Line2D at 0x7f9818777bd0>,\n",
       " <matplotlib.lines.Line2D at 0x7f981877ff90>,\n",
       " <matplotlib.lines.Line2D at 0x7f981877f890>]"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig=model.plot(prediction)\n",
    "\n",
    "add_changepoints_to_plot(fig.gca(),model,prediction)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "K4ocf1zWiqZt",
   "metadata": {
    "id": "K4ocf1zWiqZt"
   },
   "source": [
    "# Cross validating the Time Series Model using Prophet"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "6NNJaDGnir9-",
   "metadata": {
    "id": "6NNJaDGnir9-"
   },
   "outputs": [],
   "source": [
    "from fbprophet.diagnostics import cross_validation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "Vq4_ePVkjCqs",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 66,
     "referenced_widgets": [
      "0d33150759f6405dbdb318c2398883e6",
      "501fd04d0ff9484ca49a2b21745726be",
      "f20880bdf9fb41cda09333f9106f14b9",
      "d75919b03a54420b9a539487acd57753",
      "ce0bb912c3b144df9af7734d09e8fb45",
      "f43ef48125154b4a99ed57bfc6544bed",
      "d7bc2d4f8e8c4a2b8b78db859544522e",
      "909fef9bf6b24d22820285b274c0ac3f",
      "d1ca1bf038474fb9b137dfa6b272c002",
      "9e0dce6535ea4fee90f73f87e8d2ae6c",
      "96db88e5a615466387553d13fdabf0b8"
     ]
    },
    "id": "Vq4_ePVkjCqs",
    "outputId": "36c7ee3c-ee0a-4333-d7c1-a31d51678062"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "INFO:fbprophet:Making 5 forecasts with cutoffs between 2020-04-28 00:00:00 and 2020-06-27 00:00:00\n"
     ]
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "0d33150759f6405dbdb318c2398883e6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "  0%|          | 0/5 [00:00<?, ?it/s]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_cv=cross_validation(model,horizon='30 days',period='15 days',initial='90 days')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "Zfjv6dCSjGbq",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "Zfjv6dCSjGbq",
    "outputId": "dd92193e-9563-4f0d-f4e9-b5e30fa69a41"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-bb4f8bac-3b6d-4299-b1bd-df24fd8b3e93\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ds</th>\n",
       "      <th>yhat</th>\n",
       "      <th>yhat_lower</th>\n",
       "      <th>yhat_upper</th>\n",
       "      <th>y</th>\n",
       "      <th>cutoff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2020-04-29</td>\n",
       "      <td>3.201064e+06</td>\n",
       "      <td>3.196026e+06</td>\n",
       "      <td>3.206485e+06</td>\n",
       "      <td>3185195</td>\n",
       "      <td>2020-04-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-04-30</td>\n",
       "      <td>3.285432e+06</td>\n",
       "      <td>3.279010e+06</td>\n",
       "      <td>3.291189e+06</td>\n",
       "      <td>3268876</td>\n",
       "      <td>2020-04-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-05-01</td>\n",
       "      <td>3.369640e+06</td>\n",
       "      <td>3.361222e+06</td>\n",
       "      <td>3.377277e+06</td>\n",
       "      <td>3355922</td>\n",
       "      <td>2020-04-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-05-02</td>\n",
       "      <td>3.450902e+06</td>\n",
       "      <td>3.438207e+06</td>\n",
       "      <td>3.460632e+06</td>\n",
       "      <td>3437608</td>\n",
       "      <td>2020-04-28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-05-03</td>\n",
       "      <td>3.530365e+06</td>\n",
       "      <td>3.512384e+06</td>\n",
       "      <td>3.545434e+06</td>\n",
       "      <td>3515244</td>\n",
       "      <td>2020-04-28</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb4f8bac-3b6d-4299-b1bd-df24fd8b3e93')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-bb4f8bac-3b6d-4299-b1bd-df24fd8b3e93 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-bb4f8bac-3b6d-4299-b1bd-df24fd8b3e93');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "          ds          yhat    yhat_lower    yhat_upper        y     cutoff\n",
       "0 2020-04-29  3.201064e+06  3.196026e+06  3.206485e+06  3185195 2020-04-28\n",
       "1 2020-04-30  3.285432e+06  3.279010e+06  3.291189e+06  3268876 2020-04-28\n",
       "2 2020-05-01  3.369640e+06  3.361222e+06  3.377277e+06  3355922 2020-04-28\n",
       "3 2020-05-02  3.450902e+06  3.438207e+06  3.460632e+06  3437608 2020-04-28\n",
       "4 2020-05-03  3.530365e+06  3.512384e+06  3.545434e+06  3515244 2020-04-28"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cv.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "Tb2qDlQlj8tk",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "Tb2qDlQlj8tk",
    "outputId": "d3747138-442b-4a54-d4da-270473ea223a"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(150, 6)"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_cv.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ETX2otiqkPSB",
   "metadata": {
    "id": "ETX2otiqkPSB"
   },
   "source": [
    "# Obtaining Performance Metrics from the model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "X_hVdZvQkCts",
   "metadata": {
    "id": "X_hVdZvQkCts"
   },
   "outputs": [],
   "source": [
    "from fbprophet.diagnostics import performance_metrics"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "lWM4DJaHlQJ8",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 206
    },
    "id": "lWM4DJaHlQJ8",
    "outputId": "274c09e4-42c1-4b2a-929b-1c588e6beab8"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-9f8b3f4f-79ee-468c-8106-8fea12eb7857\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>horizon</th>\n",
       "      <th>mse</th>\n",
       "      <th>rmse</th>\n",
       "      <th>mae</th>\n",
       "      <th>mape</th>\n",
       "      <th>mdape</th>\n",
       "      <th>coverage</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3 days</td>\n",
       "      <td>2.721596e+10</td>\n",
       "      <td>164972.604876</td>\n",
       "      <td>129190.213315</td>\n",
       "      <td>0.016867</td>\n",
       "      <td>0.017675</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4 days</td>\n",
       "      <td>3.770271e+10</td>\n",
       "      <td>194171.855844</td>\n",
       "      <td>151379.846239</td>\n",
       "      <td>0.019330</td>\n",
       "      <td>0.022485</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>5 days</td>\n",
       "      <td>5.170151e+10</td>\n",
       "      <td>227379.657369</td>\n",
       "      <td>175214.816680</td>\n",
       "      <td>0.021780</td>\n",
       "      <td>0.025717</td>\n",
       "      <td>0.066667</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6 days</td>\n",
       "      <td>6.937441e+10</td>\n",
       "      <td>263390.225361</td>\n",
       "      <td>202192.647173</td>\n",
       "      <td>0.024558</td>\n",
       "      <td>0.026714</td>\n",
       "      <td>0.133333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>7 days</td>\n",
       "      <td>9.012810e+10</td>\n",
       "      <td>300213.430311</td>\n",
       "      <td>232530.254272</td>\n",
       "      <td>0.027838</td>\n",
       "      <td>0.031274</td>\n",
       "      <td>0.200000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9f8b3f4f-79ee-468c-8106-8fea12eb7857')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-9f8b3f4f-79ee-468c-8106-8fea12eb7857 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-9f8b3f4f-79ee-468c-8106-8fea12eb7857');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "  horizon           mse           rmse  ...      mape     mdape  coverage\n",
       "0  3 days  2.721596e+10  164972.604876  ...  0.016867  0.017675  0.000000\n",
       "1  4 days  3.770271e+10  194171.855844  ...  0.019330  0.022485  0.000000\n",
       "2  5 days  5.170151e+10  227379.657369  ...  0.021780  0.025717  0.066667\n",
       "3  6 days  6.937441e+10  263390.225361  ...  0.024558  0.026714  0.133333\n",
       "4  7 days  9.012810e+10  300213.430311  ...  0.027838  0.031274  0.200000\n",
       "\n",
       "[5 rows x 7 columns]"
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_performance=performance_metrics(df_cv)\n",
    "df_performance.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "SodLeI_0lkme",
   "metadata": {
    "id": "SodLeI_0lkme"
   },
   "outputs": [],
   "source": [
    "from fbprophet.plot import plot_cross_validation_metric"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "r9VmQZV3maFQ",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 399
    },
    "id": "r9VmQZV3maFQ",
    "outputId": "aa6d4bec-767f-43ba-d16e-f635c01fd4b3"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_performance=plot_cross_validation_metric(df_cv,metric='rmse')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "lE9kATvnmawp",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 399
    },
    "id": "lE9kATvnmawp",
    "outputId": "abb233b8-08bd-4aa6-9b93-2e79bd5d1a9a"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_performance=plot_cross_validation_metric(df_cv,metric='mse')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "hZe0zNRAmvUE",
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 388
    },
    "id": "hZe0zNRAmvUE",
    "outputId": "81427763-2137-40f6-e566-eaf834e77b7c"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_performance=plot_cross_validation_metric(df_cv,metric='mape')"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "name": "Predicting COVID-19 Cases using Facebook Prophet.ipynb",
   "provenance": [],
   "toc_visible": true
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "0d33150759f6405dbdb318c2398883e6": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "HBoxModel",
     "state": {
      "_dom_classes": [],
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "HBoxModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/controls",
      "_view_module_version": "1.5.0",
      "_view_name": "HBoxView",
      "box_style": "",
      "children": [
       "IPY_MODEL_f20880bdf9fb41cda09333f9106f14b9",
       "IPY_MODEL_d75919b03a54420b9a539487acd57753",
       "IPY_MODEL_ce0bb912c3b144df9af7734d09e8fb45"
      ],
      "layout": "IPY_MODEL_501fd04d0ff9484ca49a2b21745726be"
     }
    },
    "501fd04d0ff9484ca49a2b21745726be": {
     "model_module": "@jupyter-widgets/base",
     "model_module_version": "1.2.0",
     "model_name": "LayoutModel",
     "state": {
      "_model_module": "@jupyter-widgets/base",
      "_model_module_version": "1.2.0",
      "_model_name": "LayoutModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "LayoutView",
      "align_content": null,
      "align_items": null,
      "align_self": null,
      "border": null,
      "bottom": null,
      "display": null,
      "flex": null,
      "flex_flow": null,
      "grid_area": null,
      "grid_auto_columns": null,
      "grid_auto_flow": null,
      "grid_auto_rows": null,
      "grid_column": null,
      "grid_gap": null,
      "grid_row": null,
      "grid_template_areas": null,
      "grid_template_columns": null,
      "grid_template_rows": null,
      "height": null,
      "justify_content": null,
      "justify_items": null,
      "left": null,
      "margin": null,
      "max_height": null,
      "max_width": null,
      "min_height": null,
      "min_width": null,
      "object_fit": null,
      "object_position": null,
      "order": null,
      "overflow": null,
      "overflow_x": null,
      "overflow_y": null,
      "padding": null,
      "right": null,
      "top": null,
      "visibility": null,
      "width": null
     }
    },
    "909fef9bf6b24d22820285b274c0ac3f": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "ProgressStyleModel",
     "state": {
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "ProgressStyleModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "StyleView",
      "bar_color": null,
      "description_width": ""
     }
    },
    "96db88e5a615466387553d13fdabf0b8": {
     "model_module": "@jupyter-widgets/base",
     "model_module_version": "1.2.0",
     "model_name": "LayoutModel",
     "state": {
      "_model_module": "@jupyter-widgets/base",
      "_model_module_version": "1.2.0",
      "_model_name": "LayoutModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "LayoutView",
      "align_content": null,
      "align_items": null,
      "align_self": null,
      "border": null,
      "bottom": null,
      "display": null,
      "flex": null,
      "flex_flow": null,
      "grid_area": null,
      "grid_auto_columns": null,
      "grid_auto_flow": null,
      "grid_auto_rows": null,
      "grid_column": null,
      "grid_gap": null,
      "grid_row": null,
      "grid_template_areas": null,
      "grid_template_columns": null,
      "grid_template_rows": null,
      "height": null,
      "justify_content": null,
      "justify_items": null,
      "left": null,
      "margin": null,
      "max_height": null,
      "max_width": null,
      "min_height": null,
      "min_width": null,
      "object_fit": null,
      "object_position": null,
      "order": null,
      "overflow": null,
      "overflow_x": null,
      "overflow_y": null,
      "padding": null,
      "right": null,
      "top": null,
      "visibility": null,
      "width": null
     }
    },
    "9e0dce6535ea4fee90f73f87e8d2ae6c": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "DescriptionStyleModel",
     "state": {
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "DescriptionStyleModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "StyleView",
      "description_width": ""
     }
    },
    "ce0bb912c3b144df9af7734d09e8fb45": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "HTMLModel",
     "state": {
      "_dom_classes": [],
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "HTMLModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/controls",
      "_view_module_version": "1.5.0",
      "_view_name": "HTMLView",
      "description": "",
      "description_tooltip": null,
      "layout": "IPY_MODEL_96db88e5a615466387553d13fdabf0b8",
      "placeholder": "​",
      "style": "IPY_MODEL_9e0dce6535ea4fee90f73f87e8d2ae6c",
      "value": " 5/5 [00:12&lt;00:00,  2.29s/it]"
     }
    },
    "d1ca1bf038474fb9b137dfa6b272c002": {
     "model_module": "@jupyter-widgets/base",
     "model_module_version": "1.2.0",
     "model_name": "LayoutModel",
     "state": {
      "_model_module": "@jupyter-widgets/base",
      "_model_module_version": "1.2.0",
      "_model_name": "LayoutModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "LayoutView",
      "align_content": null,
      "align_items": null,
      "align_self": null,
      "border": null,
      "bottom": null,
      "display": null,
      "flex": null,
      "flex_flow": null,
      "grid_area": null,
      "grid_auto_columns": null,
      "grid_auto_flow": null,
      "grid_auto_rows": null,
      "grid_column": null,
      "grid_gap": null,
      "grid_row": null,
      "grid_template_areas": null,
      "grid_template_columns": null,
      "grid_template_rows": null,
      "height": null,
      "justify_content": null,
      "justify_items": null,
      "left": null,
      "margin": null,
      "max_height": null,
      "max_width": null,
      "min_height": null,
      "min_width": null,
      "object_fit": null,
      "object_position": null,
      "order": null,
      "overflow": null,
      "overflow_x": null,
      "overflow_y": null,
      "padding": null,
      "right": null,
      "top": null,
      "visibility": null,
      "width": null
     }
    },
    "d75919b03a54420b9a539487acd57753": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "FloatProgressModel",
     "state": {
      "_dom_classes": [],
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "FloatProgressModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/controls",
      "_view_module_version": "1.5.0",
      "_view_name": "ProgressView",
      "bar_style": "success",
      "description": "",
      "description_tooltip": null,
      "layout": "IPY_MODEL_d1ca1bf038474fb9b137dfa6b272c002",
      "max": 5,
      "min": 0,
      "orientation": "horizontal",
      "style": "IPY_MODEL_909fef9bf6b24d22820285b274c0ac3f",
      "value": 5
     }
    },
    "d7bc2d4f8e8c4a2b8b78db859544522e": {
     "model_module": "@jupyter-widgets/base",
     "model_module_version": "1.2.0",
     "model_name": "LayoutModel",
     "state": {
      "_model_module": "@jupyter-widgets/base",
      "_model_module_version": "1.2.0",
      "_model_name": "LayoutModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "LayoutView",
      "align_content": null,
      "align_items": null,
      "align_self": null,
      "border": null,
      "bottom": null,
      "display": null,
      "flex": null,
      "flex_flow": null,
      "grid_area": null,
      "grid_auto_columns": null,
      "grid_auto_flow": null,
      "grid_auto_rows": null,
      "grid_column": null,
      "grid_gap": null,
      "grid_row": null,
      "grid_template_areas": null,
      "grid_template_columns": null,
      "grid_template_rows": null,
      "height": null,
      "justify_content": null,
      "justify_items": null,
      "left": null,
      "margin": null,
      "max_height": null,
      "max_width": null,
      "min_height": null,
      "min_width": null,
      "object_fit": null,
      "object_position": null,
      "order": null,
      "overflow": null,
      "overflow_x": null,
      "overflow_y": null,
      "padding": null,
      "right": null,
      "top": null,
      "visibility": null,
      "width": null
     }
    },
    "f20880bdf9fb41cda09333f9106f14b9": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "HTMLModel",
     "state": {
      "_dom_classes": [],
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "HTMLModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/controls",
      "_view_module_version": "1.5.0",
      "_view_name": "HTMLView",
      "description": "",
      "description_tooltip": null,
      "layout": "IPY_MODEL_d7bc2d4f8e8c4a2b8b78db859544522e",
      "placeholder": "​",
      "style": "IPY_MODEL_f43ef48125154b4a99ed57bfc6544bed",
      "value": "100%"
     }
    },
    "f43ef48125154b4a99ed57bfc6544bed": {
     "model_module": "@jupyter-widgets/controls",
     "model_module_version": "1.5.0",
     "model_name": "DescriptionStyleModel",
     "state": {
      "_model_module": "@jupyter-widgets/controls",
      "_model_module_version": "1.5.0",
      "_model_name": "DescriptionStyleModel",
      "_view_count": null,
      "_view_module": "@jupyter-widgets/base",
      "_view_module_version": "1.2.0",
      "_view_name": "StyleView",
      "description_width": ""
     }
    }
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
